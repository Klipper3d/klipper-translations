# srbjessen <srbjessen@gmail.com>, 2023, 2024.
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: yifeiding@protonmail.com\n"
"PO-Revision-Date: 2024-03-21 11:02+0000\n"
"Last-Translator: srbjessen <srbjessen@gmail.com>\n"
"Language-Team: Danish <https://hosted.weblate.org/projects/klipper/g-codes/"
"da/>\n"
"Language: da\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.5-dev\n"

msgid ""
"This document describes the commands that Klipper supports. These are "
"commands that one may enter into the OctoPrint terminal tab."
msgstr ""
"Dette dokument beskriver de kommandoer der er understøttet af Klipper. Disse"
" kommandoer kan indtastes i Terminalen på OctoPrint, Fluidd samt Mainsail."

msgid "G-Code commands"
msgstr ""

msgid "Klipper supports the following standard G-Code commands:"
msgstr ""

msgid "Move (G0 or G1): `G1 [X<pos>] [Y<pos>] [Z<pos>] [E<pos>] [F<speed>]`"
msgstr ""

msgid "Dwell: `G4 P<milliseconds>`"
msgstr ""

msgid "Move to origin: `G28 [X] [Y] [Z]`"
msgstr ""

msgid "Turn off motors: `M18` or `M84`"
msgstr ""

msgid "Wait for current moves to finish: `M400`"
msgstr ""

msgid "Use absolute/relative distances for extrusion: `M82`, `M83`"
msgstr ""

msgid "Use absolute/relative coordinates: `G90`, `G91`"
msgstr ""

msgid "Set position: `G92 [X<pos>] [Y<pos>] [Z<pos>] [E<pos>]`"
msgstr ""

msgid "Set speed factor override percentage: `M220 S<percent>`"
msgstr ""

msgid "Set extrude factor override percentage: `M221 S<percent>`"
msgstr ""

msgid "Set acceleration: `M204 S<value>` OR `M204 P<value> T<value>`"
msgstr ""

msgid ""
"Note: If S is not specified and both P and T are specified, then the "
"acceleration is set to the minimum of P and T. If only one of P or T is "
"specified, the command has no effect."
msgstr ""

msgid "Get extruder temperature: `M105`"
msgstr ""

msgid "Set extruder temperature: `M104 [T<index>] [S<temperature>]`"
msgstr ""

msgid "Set extruder temperature and wait: `M109 [T<index>] S<temperature>`"
msgstr ""

msgid "Note: M109 always waits for temperature to settle at requested value"
msgstr ""

msgid "Set bed temperature: `M140 [S<temperature>]`"
msgstr ""

msgid "Set bed temperature and wait: `M190 S<temperature>`"
msgstr ""

msgid "Note: M190 always waits for temperature to settle at requested value"
msgstr ""

msgid "Set fan speed: `M106 S<value>`"
msgstr ""

msgid "Turn fan off: `M107`"
msgstr ""

msgid "Emergency stop: `M112`"
msgstr ""

msgid "Get current position: `M114`"
msgstr ""

msgid "Get firmware version: `M115`"
msgstr ""

msgid ""
"For further details on the above commands see the [RepRap G-Code "
"documentation](http://reprap.org/wiki/G-code)."
msgstr ""

msgid ""
"If one requires a less common G-Code command then it may be possible to "
"implement it with a custom [gcode_macro config "
"section](Config_Reference.md#gcode_macro). For example, one might use this "
"to implement: `G12`, `G29`, `G30`, `G31`, `M42`, `M80`, `M81`, `T1`, etc."
msgstr ""

msgid "List SD card: `M20`"
msgstr ""

msgid "Initialize SD card: `M21`"
msgstr ""

msgid "Select SD file: `M23 <filename>`"
msgstr ""

msgid "Start/resume SD print: `M24`"
msgstr ""

msgid "Pause SD print: `M25`"
msgstr ""

msgid "Set SD position: `M26 S<offset>`"
msgstr ""

msgid "Report SD print status: `M27`"
msgstr ""

msgid ""
"The following standard G-Code commands are available if a [gcode_arcs config"
" section](Config_Reference.md#gcode_arcs) is enabled:"
msgstr ""

msgid "Display Message: `M117 <message>`"
msgstr ""

msgid "Set build percentage: `M73 P<percent>`"
msgstr ""

msgid "Get Endstop Status: `M119` (Use QUERY_ENDSTOPS instead.)"
msgstr ""

msgid ""
"Klipper uses \"extended\" G-Code commands for general configuration and "
"status. These extended commands all follow a similar format - they start "
"with a command name and may be followed by one or more parameters. For "
"example: `SET_SERVO SERVO=myservo ANGLE=5.3`. In this document, the commands"
" and parameters are shown in uppercase, however they are not case sensitive."
" (So, \"SET_SERVO\" and \"set_servo\" both run the same command.)"
msgstr ""

msgid ""
"`QUERY_ENDSTOPS`: Probe the axis endstops and report if they are "
"\"triggered\" or in an \"open\" state. This command is typically used to "
"verify that an endstop is working correctly."
msgstr ""

msgid ""
"`QUERY_ADC [NAME=<config_name>] [PULLUP=<value>]`: Report the last analog "
"value received for a configured analog pin. If NAME is not provided, the "
"list of available adc names are reported. If PULLUP is provided (as a value "
"in Ohms), the raw analog value along with the equivalent resistance given "
"that pullup is reported."
msgstr ""

msgid ""
"`SET_GCODE_OFFSET [X=<pos>|X_ADJUST=<adjust>] [Y=<pos>|Y_ADJUST=<adjust>] "
"[Z=<pos>|Z_ADJUST=<adjust>] [MOVE=1 [MOVE_SPEED=<speed>]]`: Set a positional"
" offset to apply to future G-Code commands. This is commonly used to "
"virtually change the Z bed offset or to set nozzle XY offsets when switching"
" extruders. For example, if \"SET_GCODE_OFFSET Z=0.2\" is sent, then future "
"G-Code moves will have 0.2mm added to their Z height. If the X_ADJUST style "
"parameters are used, then the adjustment will be added to any existing "
"offset (eg, \"SET_GCODE_OFFSET Z=-0.2\" followed by \"SET_GCODE_OFFSET "
"Z_ADJUST=0.3\" would result in a total Z offset of 0.1). If \"MOVE=1\" is "
"specified then a toolhead move will be issued to apply the given offset "
"(otherwise the offset will take effect on the next absolute G-Code move that"
" specifies the given axis). If \"MOVE_SPEED\" is specified then the toolhead"
" move will be performed with the given speed (in mm/s); otherwise the "
"toolhead move will use the last specified G-Code speed."
msgstr ""

msgid ""
"`SAVE_GCODE_STATE [NAME=<state_name>]`: Save the current g-code coordinate "
"parsing state. Saving and restoring the g-code state is useful in scripts "
"and macros. This command saves the current g-code absolute coordinate mode "
"(G90/G91), absolute extrude mode (M82/M83), origin (G92), offset "
"(SET_GCODE_OFFSET), speed override (M220), extruder override (M221), move "
"speed, current XYZ position, and relative extruder \"E\" position. If NAME "
"is provided it allows one to name the saved state to the given string. If "
"NAME is not provided it defaults to \"default\"."
msgstr ""

msgid ""
"`RESTORE_GCODE_STATE [NAME=<state_name>] [MOVE=1 [MOVE_SPEED=<speed>]]`: "
"Restore a state previously saved via SAVE_GCODE_STATE. If \"MOVE=1\" is "
"specified then a toolhead move will be issued to move back to the previous "
"XYZ position. If \"MOVE_SPEED\" is specified then the toolhead move will be "
"performed with the given speed (in mm/s); otherwise the toolhead move will "
"use the restored g-code speed."
msgstr ""

msgid ""
"`PID_CALIBRATE HEATER=<config_name> TARGET=<temperature> [WRITE_FILE=1]`: "
"Perform a PID calibration test. The specified heater will be enabled until "
"the specified target temperature is reached, and then the heater will be "
"turned off and on for several cycles. If the WRITE_FILE parameter is "
"enabled, then the file /tmp/heattest.txt will be created with a log of all "
"temperature samples taken during the test."
msgstr ""

msgid "`TURN_OFF_HEATERS`: Turn off all heaters."
msgstr ""

msgid ""
"`TEMPERATURE_WAIT SENSOR=<config_name> [MINIMUM=<target>] "
"[MAXIMUM=<target>]`: Wait until the given temperature sensor is at or above "
"the supplied MINIMUM and/or at or below the supplied MAXIMUM."
msgstr ""

msgid ""
"`SET_VELOCITY_LIMIT [VELOCITY=<value>] [ACCEL=<value>] "
"[ACCEL_TO_DECEL=<value>] [SQUARE_CORNER_VELOCITY=<value>]`: Modify the "
"printer's velocity limits."
msgstr ""

msgid ""
"`SET_HEATER_TEMPERATURE HEATER=<heater_name> [TARGET=<target_temperature>]`:"
" Sets the target temperature for a heater. If a target temperature is not "
"supplied, the target is 0."
msgstr ""

msgid ""
"`SET_STEPPER_ENABLE STEPPER=<config_name> ENABLE=[0|1]`: Enable or disable "
"only the given stepper. This is a diagnostic and debugging tool and must be "
"used with care. Disabling an axis motor does not reset the homing "
"information. Manually moving a disabled stepper may cause the machine to "
"operate the motor outside of safe limits. This can lead to damage to axis "
"components, hot ends, and print surface."
msgstr ""

msgid ""
"`STEPPER_BUZZ STEPPER=<config_name>`: Move the given stepper forward one mm "
"and then backward one mm, repeated 10 times. This is a diagnostic tool to "
"help verify stepper connectivity."
msgstr ""

msgid ""
"`MANUAL_PROBE [SPEED=<speed>]`: Run a helper script useful for measuring the"
" height of the nozzle at a given location. If SPEED is specified, it sets "
"the speed of TESTZ commands (the default is 5mm/s). During a manual probe, "
"the following additional commands are available:"
msgstr ""

msgid ""
"`ACCEPT`: This command accepts the current Z position and concludes the "
"manual probing tool."
msgstr ""

msgid "`ABORT`: This command terminates the manual probing tool."
msgstr ""

msgid ""
"`TESTZ Z=<value>`: This command moves the nozzle up or down by the amount "
"specified in \"value\". For example, `TESTZ Z=-.1` would move the nozzle "
"down .1mm while `TESTZ Z=.1` would move the nozzle up .1mm. The value may "
"also be `+`, `-`, `++`, or `--` to move the nozzle up or down an amount "
"relative to previous attempts."
msgstr ""

msgid ""
"`Z_ENDSTOP_CALIBRATE [SPEED=<speed>]`: Run a helper script useful for "
"calibrating a Z position_endstop config setting. See the MANUAL_PROBE "
"command for details on the parameters and the additional commands available "
"while the tool is active."
msgstr ""

msgid ""
"`SET_DISPLAY_GROUP [DISPLAY=<display>] GROUP=<group>`: Set the active "
"display group of an lcd display. This allows to define multiple display data"
" groups in the config, e.g. `[display_data <group> <elementname>]` and "
"switch between them using this extended gcode command. If DISPLAY is not "
"specified it defaults to \"display\" (the primary display)."
msgstr ""

msgid ""
"`SET_IDLE_TIMEOUT [TIMEOUT=<timeout>]`: Allows the user to set the idle "
"timeout (in seconds)."
msgstr ""

msgid ""
"`RESTART`: This will cause the host software to reload its config and "
"perform an internal reset. This command will not clear error state from the "
"micro-controller (see FIRMWARE_RESTART) nor will it load new software (see "
"[the FAQ](FAQ.md#how-do-i-upgrade-to-the-latest-software))."
msgstr ""

msgid ""
"`FIRMWARE_RESTART`: This is similar to a RESTART command, but it also clears"
" any error state from the micro-controller."
msgstr ""

msgid ""
"`SAVE_CONFIG`: This command will overwrite the main printer config file and "
"restart the host software. This command is used in conjunction with other "
"calibration commands to store the results of calibration tests."
msgstr ""

msgid "`STATUS`: Report the Klipper host software status."
msgstr ""

msgid "`HELP`: Report the list of available extended G-Code commands."
msgstr ""

msgid ""
"`SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>`: This "
"command allows one to change the value of a gcode_macro variable at run-"
"time. The provided VALUE is parsed as a Python literal."
msgstr ""

msgid ""
"`SET_SERVO SERVO=config_name [ANGLE=<degrees> | WIDTH=<seconds>]`: Set the "
"servo position to the given angle (in degrees) or pulse width (in seconds). "
"Use `WIDTH=0` to disable the servo output."
msgstr ""

msgid ""
"`MANUAL_STEPPER STEPPER=config_name [ENABLE=[0|1]] [SET_POSITION=<pos>] "
"[SPEED=<speed>] [ACCEL=<accel>] [MOVE=<pos> [STOP_ON_ENDSTOP=[1|2|-1|-2]] "
"[SYNC=0]]`: This command will alter the state of the stepper. Use the ENABLE"
" parameter to enable/disable the stepper. Use the SET_POSITION parameter to "
"force the stepper to think it is at the given position. Use the MOVE "
"parameter to request a movement to the given position. If SPEED and/or ACCEL"
" is specified then the given values will be used instead of the defaults "
"specified in the config file. If an ACCEL of zero is specified then no "
"acceleration will be performed. If STOP_ON_ENDSTOP=1 is specified then the "
"move will end early should the endstop report as triggered (use "
"STOP_ON_ENDSTOP=2 to complete the move without error even if the endstop "
"does not trigger, use -1 or -2 to stop when the endstop reports not "
"triggered). Normally future G-Code commands will be scheduled to run after "
"the stepper move completes, however if a manual stepper move uses SYNC=0 "
"then future G-Code movement commands may run in parallel with the stepper "
"movement."
msgstr ""

msgid ""
"`PROBE [PROBE_SPEED=<mm/s>] [LIFT_SPEED=<mm/s>] [SAMPLES=<count>] "
"[SAMPLE_RETRACT_DIST=<mm>] [SAMPLES_TOLERANCE=<mm>] "
"[SAMPLES_TOLERANCE_RETRIES=<count>] [SAMPLES_RESULT=median|average]`: Move "
"the nozzle downwards until the probe triggers. If any of the optional "
"parameters are provided they override their equivalent setting in the [probe"
" config section](Config_Reference.md#probe)."
msgstr ""

msgid ""
"`QUERY_PROBE`: Report the current status of the probe (\"triggered\" or "
"\"open\")."
msgstr ""

msgid ""
"`PROBE_ACCURACY [PROBE_SPEED=<mm/s>] [SAMPLES=<count>] "
"[SAMPLE_RETRACT_DIST=<mm>]`: Calculate the maximum, minimum, average, "
"median, and standard deviation of multiple probe samples. By default, 10 "
"SAMPLES are taken. Otherwise the optional parameters default to their "
"equivalent setting in the probe config section."
msgstr ""

msgid ""
"`PROBE_CALIBRATE [SPEED=<speed>] [<probe_parameter>=<value>]`: Run a helper "
"script useful for calibrating the probe's z_offset. See the PROBE command "
"for details on the optional probe parameters. See the MANUAL_PROBE command "
"for details on the SPEED parameter and the additional commands available "
"while the tool is active. Please note, the PROBE_CALIBRATE command uses the "
"speed variable to move in XY direction as well as Z."
msgstr ""

msgid ""
"`BLTOUCH_STORE MODE=<output_mode>`: This stores an output mode in the EEPROM"
" of a BLTouch V3.1 Available output_modes are: `5V`, `OD`"
msgstr ""

msgid ""
"`DELTA_ANALYZE`: This command is used during enhanced delta calibration. See"
" [Delta Calibrate](Delta_Calibrate.md) for details."
msgstr ""

msgid ""
"`BED_MESH_MAP`: Like to BED_MESH_OUTPUT, this command prints the current "
"state of the mesh to the terminal. Instead of printing the values in a human"
" readable format, the state is serialized in json format. This allows "
"octoprint plugins to easily capture the data and generate height maps "
"approximating the bed's surface."
msgstr ""

msgid ""
"`BED_MESH_CLEAR`: This command clears the mesh and removes all z adjustment."
" It is recommended to put this in your end-gcode."
msgstr ""

msgid ""
"`BED_MESH_OFFSET [X=<value>] [Y=<value>]`: Applies X and/or Y offsets to the"
" mesh lookup. This is useful for printers with independent extruders, as an "
"offset is necessary to produce correct Z adjustment after a tool change."
msgstr ""

msgid ""
"`BED_SCREWS_ADJUST`: This command will invoke the bed screws adjustment "
"tool. It will command the nozzle to different locations (as defined in the "
"config file) and allow one to make adjustments to the bed screws so that the"
" bed is a constant distance from the nozzle."
msgstr ""

msgid ""
"`ENDSTOP_PHASE_CALIBRATE [STEPPER=<config_name>]`: If no STEPPER parameter "
"is provided then this command will reports statistics on endstop stepper "
"phases during past homing operations. When a STEPPER parameter is provided "
"it arranges for the given endstop phase setting to be written to the config "
"file (in conjunction with the SAVE_CONFIG command)."
msgstr ""

msgid ""
"`FORCE_MOVE STEPPER=<config_name> DISTANCE=<value> VELOCITY=<value> "
"[ACCEL=<value>]`: This command will forcibly move the given stepper the "
"given distance (in mm) at the given constant velocity (in mm/s). If ACCEL is"
" specified and is greater than zero, then the given acceleration (in mm/s^2)"
" will be used; otherwise no acceleration is performed. No boundary checks "
"are performed; no kinematic updates are made; other parallel steppers on an "
"axis will not be moved. Use caution as an incorrect command could cause "
"damage! Using this command will almost certainly place the low-level "
"kinematics in an incorrect state; issue a G28 afterwards to reset the "
"kinematics. This command is intended for low-level diagnostics and "
"debugging."
msgstr ""

msgid ""
"`SET_KINEMATIC_POSITION [X=<value>] [Y=<value>] [Z=<value>]`: Force the low-"
"level kinematic code to believe the toolhead is at the given cartesian "
"position. This is a diagnostic and debugging command; use SET_GCODE_OFFSET "
"and/or G92 for regular axis transformations. If an axis is not specified "
"then it will default to the position that the head was last commanded to. "
"Setting an incorrect or invalid position may lead to internal software "
"errors. This command may invalidate future boundary checks; issue a G28 "
"afterwards to reset the kinematics."
msgstr ""

msgid "`SDCARD_LOOP_END`: End a looped section in the SD print."
msgstr ""

msgid ""
"`SDCARD_LOOP_DESIST`: Complete existing loops without further iterations."
msgstr ""

msgid ""
"`M118 <message>`: echo the message prepended with the configured default "
"prefix (or `echo: ` if no prefix is configured)."
msgstr ""

msgid ""
"`RESPOND MSG=\"<message>\"`: echo the message prepended with the configured "
"default prefix (or `echo: ` if no prefix is configured)."
msgstr ""

msgid ""
"`RESPOND TYPE=echo MSG=\"<message>\"`: echo the message prepended with "
"`echo: `."
msgstr ""

msgid ""
"`RESPOND TYPE=error MSG=\"<message>\"`: echo the message prepended with `!! "
"`."
msgstr ""

msgid ""
"`RESPOND PREFIX=<prefix> MSG=\"<message>\"`: echo the message prepended with"
" `<prefix>`. (The `PREFIX` parameter will take priority over the `TYPE` "
"parameter)"
msgstr ""

msgid ""
"The following commands are available when the [pause_resume config "
"section](Config_Reference.md#pause_resume) is enabled:"
msgstr ""

msgid ""
"`PAUSE`: Pauses the current print. The current position is captured for "
"restoration upon resume."
msgstr ""

msgid ""
"`RESUME [VELOCITY=<value>]`: Resumes the print from a pause, first restoring"
" the previously captured position. The VELOCITY parameter determines the "
"speed at which the tool should return to the original captured position."
msgstr ""

msgid ""
"`CLEAR_PAUSE`: Clears the current paused state without resuming the print. "
"This is useful if one decides to cancel a print after a PAUSE. It is "
"recommended to add this to your start gcode to make sure the paused state is"
" fresh for each print."
msgstr ""

msgid "`CANCEL_PRINT`: Cancels the current print."
msgstr ""

msgid ""
"`SET_FILAMENT_SENSOR SENSOR=<sensor_name> ENABLE=[0|1]`: Sets the filament "
"sensor on/off. If ENABLE is set to 0, the filament sensor will be disabled, "
"if set to 1 it is enabled."
msgstr ""

msgid ""
"`SET_RETRACTION [RETRACT_LENGTH=<mm>] [RETRACT_SPEED=<mm/s>] "
"[UNRETRACT_EXTRA_LENGTH=<mm>] [UNRETRACT_SPEED=<mm/s>]`: Adjust the "
"parameters used by firmware retraction. RETRACT_LENGTH determines the length"
" of filament to retract and unretract. The speed of retraction is adjusted "
"via RETRACT_SPEED, and is typically set relatively high. The speed of "
"unretraction is adjusted via UNRETRACT_SPEED, and is not particularly "
"critical, although often lower than RETRACT_SPEED. In some cases it is "
"useful to add a small amount of additional length on unretraction, and this "
"is set via UNRETRACT_EXTRA_LENGTH. SET_RETRACTION is commonly set as part of"
" slicer per-filament configuration, as different filaments require different"
" parameter settings."
msgstr ""

msgid ""
"`GET_RETRACTION`: Queries the current parameters used by firmware retraction"
" and displays them on the terminal."
msgstr ""

msgid ""
"`G10`: Retracts the extruder using the currently configured parameters."
msgstr ""

msgid ""
"`G11`: Unretracts the extruder using the currently configured parameters."
msgstr ""

msgid ""
"`SET_SKEW [XY=<ac_length,bd_length,ad_length>] [XZ=<ac,bd,ad>] "
"[YZ=<ac,bd,ad>] [CLEAR=<0|1>]`: Configures the [skew_correction] module with"
" measurements (in mm) taken from a calibration print. One may enter "
"measurements for any combination of planes, planes not entered will retain "
"their current value. If `CLEAR=1` is entered then all skew correction will "
"be disabled."
msgstr ""

msgid ""
"`GET_CURRENT_SKEW`: Reports the current printer skew for each plane in both "
"radians and degrees. The skew is calculated based on parameters provided via"
" the `SET_SKEW` gcode."
msgstr ""

msgid ""
"`UPDATE_DELAYED_GCODE [ID=<name>] [DURATION=<seconds>]`: Updates the delay "
"duration for the identified [delayed_gcode] and starts the timer for gcode "
"execution. A value of 0 will cancel a pending delayed gcode from executing."
msgstr ""

msgid ""
"`SAVE_VARIABLE VARIABLE=<name> VALUE=<value>`: Saves the variable to disk so"
" that it can be used across restarts. All stored variables are loaded into "
"the `printer.save_variables.variables` dict at startup and can be used in "
"gcode macros. The provided VALUE is parsed as a Python literal."
msgstr ""

msgid ""
"`SET_INPUT_SHAPER [SHAPER_FREQ_X=<shaper_freq_x>] "
"[SHAPER_FREQ_Y=<shaper_freq_y>] [DAMPING_RATIO_X=<damping_ratio_x>] "
"[DAMPING_RATIO_Y=<damping_ratio_y>] [SHAPER_TYPE=<shaper>] "
"[SHAPER_TYPE_X=<shaper_type_x>] [SHAPER_TYPE_Y=<shaper_type_y>]`: Modify "
"input shaper parameters. Note that SHAPER_TYPE parameter resets input shaper"
" for both X and Y axes even if different shaper types have been configured "
"in [input_shaper] section. SHAPER_TYPE cannot be used together with either "
"of SHAPER_TYPE_X and SHAPER_TYPE_Y parameters. See [config "
"reference](Config_Reference.md#input_shaper) for more details on each of "
"these parameters."
msgstr ""

msgid ""
"`MEASURE_AXES_NOISE`: Measures and outputs the noise for all axes of all "
"enabled accelerometer chips."
msgstr ""

msgid ""
"`PALETTE_CONNECT`: This command initializes the connection with the Palette "
"2."
msgstr ""

msgid "`PALETTE_DISCONNECT`: This command disconnects from the Palette 2."
msgstr ""

msgid ""
"`PALETTE_CLEAR`: This command instructs the Palette 2 to clear all of the "
"input and output paths of filament."
msgstr ""

msgid ""
"`PALETTE_CUT`: This command instructs the Palette 2 to cut the filament "
"currently loaded in the splice core."
msgstr ""

msgid ""
"`PALETTE_SMART_LOAD`: This command start the smart load sequence on the "
"Palette 2. Filament is loaded automatically by extruding it the distance "
"calibrated on the device for the printer, and instructs the Palette 2 once "
"the loading has been completed. This command is the same as pressing **Smart"
" Load** directly on the Palette 2 screen after the filament load is "
"complete."
msgstr ""

msgid ""
"Palette prints work by embedding special OCodes (Omega Codes) in the GCode "
"file:"
msgstr ""

msgid ""
"`O1`...`O32`: These codes are read from the GCode stream and processed by "
"this module and passed to the Palette 2 device."
msgstr ""

#: docs/G-Codes.md:block 1 (header)
msgid "G-Codes"
msgstr ""

#: docs/G-Codes.md:block 29 (unordered list)
msgid ""
"`Z_OFFSET_APPLY_ENDSTOP`: Take the current Z Gcode offset (aka, "
"babystepping), and subtract it from the stepper_z endstop_position. This "
"acts to take a frequently used babystepping value, and \"make it "
"permanent\". Requires a `SAVE_CONFIG` to take effect."
msgstr ""

#: docs/G-Codes.md:block 54 (unordered list)
msgid ""
"`Z_OFFSET_APPLY_PROBE`: Take the current Z Gcode offset (aka, babystepping),"
" and subtract if from the probe's z_offset. This acts to take a frequently "
"used babystepping value, and \"make it permanent\". Requires a `SAVE_CONFIG`"
" to take effect."
msgstr ""

#: docs/G-Codes.md:block 29 (unordered list)
msgid ""
"`TUNING_TOWER COMMAND=<command> PARAMETER=<name> START=<value> "
"[SKIP=<value>] [FACTOR=<value> [BAND=<value>]] | [STEP_DELTA=<value> "
"STEP_HEIGHT=<value>]`: A tool for tuning a parameter on each Z height during"
" a print. The tool will run the given `COMMAND` with the given `PARAMETER` "
"assigned to a value that varies with `Z` according to a formula. Use "
"`FACTOR` if you will use a ruler or calipers to measure the Z height of the "
"optimum value, or `STEP_DELTA` and `STEP_HEIGHT` if the tuning tower model "
"has bands of discrete values as is common with temperature towers. If "
"`SKIP=<value>` is specified, the tuning process doesn't begin until Z height"
" `<value>` is reached, and below that the value will be set to `START`; in "
"this case, the `z_height` used in the formulas below is actually `max(z - "
"skip, 0)`. There are three possible combinations of options:"
msgstr ""

#: docs/G-Codes.md:block 120 (unordered list)
msgid ""
"`ACCELEROMETER_MEASURE [CHIP=<config_name>] [NAME=<value>]`: Starts "
"accelerometer measurements at the requested number of samples per second. If"
" CHIP is not specified it defaults to \"adxl345\". The command works in a "
"start-stop mode: when executed for the first time, it starts the "
"measurements, next execution stops them. The results of measurements are "
"written to a file named `/tmp/adxl345-<chip>-<name>.csv` where `<chip>` is "
"the name of the accelerometer chip (`my_chip_name` from `[adxl345 "
"my_chip_name]`) and `<name>` is the optional NAME parameter. If NAME is not "
"specified it defaults to the current time in \"YYYYMMDD_HHMMSS\" format. If "
"the accelerometer does not have a name in its config section (simply "
"`[adxl345]`) then `<chip>` part of the name is not generated."
msgstr ""

#: docs/G-Codes.md:block 120 (unordered list)
msgid ""
"`ACCELEROMETER_QUERY [CHIP=<config_name>] [RATE=<value>]`: queries "
"accelerometer for the current value. If CHIP is not specified it defaults to"
" \"adxl345\". If RATE is not specified, the default value is used. This "
"command is useful to test the connection to the ADXL345 accelerometer: one "
"of the returned values should be a free-fall acceleration (+/- some noise of"
" the chip)."
msgstr ""

#: docs/G-Codes.md:block 105 (unordered list)
msgid ""
"`CALC_MEASURED_SKEW [AC=<ac_length>] [BD=<bd_length>] [AD=<ad_length>]`: "
"Calculates and reports the skew (in radians and degrees) based on a measured"
" print. This can be useful for determining the printer's current skew after "
"correction has been applied. It may also be useful before correction is "
"applied to determine if skew correction is necessary. See [Skew "
"Correction](Skew_Correction.md) for details on skew calibration objects and "
"measurements."
msgstr ""

#: docs/G-Codes.md:block 63 (unordered list)
msgid ""
"`BED_MESH_OUTPUT PGP=[<0:1>]`: This command outputs the current probed z "
"values and current mesh values to the terminal. If PGP=1 is specified the X,"
" Y coordinates generated by bed_mesh, along with their associated indices, "
"will be output to the terminal."
msgstr ""

#: docs/G-Codes.md:block 9 (header)
msgid "Additional Commands"
msgstr ""

#: docs/G-Codes.md:block 12 (header)
msgid "[adxl345]"
msgstr ""

#: docs/G-Codes.md:block 13 (paragraph)
msgid ""
"The following commands are available when an [adxl345 config "
"section](Config_Reference.md#adxl345) is enabled."
msgstr ""

#: docs/G-Codes.md:block 14 (header)
msgid "ACCELEROMETER_MEASURE"
msgstr ""

#: docs/G-Codes.md:block 16 (header)
msgid "ACCELEROMETER_QUERY"
msgstr ""

#: docs/G-Codes.md:block 18 (header)
msgid "ACCELEROMETER_DEBUG_READ"
msgstr ""

#: docs/G-Codes.md:block 19 (paragraph)
msgid ""
"`ACCELEROMETER_DEBUG_READ [CHIP=<config_name>] REG=<register>`: queries "
"ADXL345 register \"register\" (e.g. 44 or 0x2C). Can be useful for debugging"
" purposes."
msgstr ""

#: docs/G-Codes.md:block 20 (header)
msgid "ACCELEROMETER_DEBUG_WRITE"
msgstr ""

#: docs/G-Codes.md:block 21 (paragraph)
msgid ""
"`ACCELEROMETER_DEBUG_WRITE [CHIP=<config_name>] REG=<register> VAL=<value>`:"
" Writes raw \"value\" into a register \"register\". Both \"value\" and "
"\"register\" can be a decimal or a hexadecimal integer. Use with care, and "
"refer to ADXL345 data sheet for the reference."
msgstr ""

#: docs/G-Codes.md:block 22 (header)
msgid "[bed_mesh]"
msgstr ""

#: docs/G-Codes.md:block 23 (paragraph)
msgid ""
"The following commands are available when the [bed_mesh config "
"section](Config_Reference.md#bed_mesh) is enabled (also see the [bed mesh "
"guide](Bed_Mesh.md))."
msgstr ""

#: docs/G-Codes.md:block 24 (header)
msgid "BED_MESH_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 26 (header)
msgid "BED_MESH_OUTPUT"
msgstr ""

#: docs/G-Codes.md:block 28 (header)
msgid "BED_MESH_MAP"
msgstr ""

#: docs/G-Codes.md:block 30 (header)
msgid "BED_MESH_CLEAR"
msgstr ""

#: docs/G-Codes.md:block 32 (header)
msgid "BED_MESH_PROFILE"
msgstr ""

#: docs/G-Codes.md:block 33 (paragraph)
msgid ""
"`BED_MESH_PROFILE LOAD=<name> SAVE=<name> REMOVE=<name>`: This command "
"provides profile management for mesh state. LOAD will restore the mesh state"
" from the profile matching the supplied name. SAVE will save the current "
"mesh state to a profile matching the supplied name. Remove will delete the "
"profile matching the supplied name from persistent memory. Note that after "
"SAVE or REMOVE operations have been run the SAVE_CONFIG gcode must be run to"
" make the changes to persistent memory permanent."
msgstr ""

#: docs/G-Codes.md:block 34 (header)
msgid "BED_MESH_OFFSET"
msgstr ""

#: docs/G-Codes.md:block 36 (header)
msgid "[bed_screws]"
msgstr ""

#: docs/G-Codes.md:block 37 (paragraph)
msgid ""
"The following commands are available when the [bed_screws config "
"section](Config_Reference.md#bed_screws) is enabled (also see the [manual "
"level guide](Manual_Level.md#adjusting-bed-leveling-screws))."
msgstr ""

#: docs/G-Codes.md:block 38 (header)
msgid "BED_SCREWS_ADJUST"
msgstr ""

#: docs/G-Codes.md:block 40 (header)
msgid "[bed_tilt]"
msgstr ""

#: docs/G-Codes.md:block 41 (paragraph)
msgid ""
"The following commands are available when the [bed_tilt config "
"section](Config_Reference.md#bed_tilt) is enabled."
msgstr ""

#: docs/G-Codes.md:block 42 (header)
msgid "BED_TILT_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 44 (header)
msgid "[bltouch]"
msgstr ""

#: docs/G-Codes.md:block 45 (paragraph)
msgid ""
"The following command is available when a [bltouch config "
"section](Config_Reference.md#bltouch) is enabled (also see the [BL-Touch "
"guide](BLTouch.md))."
msgstr ""

#: docs/G-Codes.md:block 46 (header)
msgid "BLTOUCH_DEBUG"
msgstr ""

#: docs/G-Codes.md:block 47 (paragraph)
msgid ""
"`BLTOUCH_DEBUG COMMAND=<command>`: This sends a command to the BLTouch. It "
"may be useful for debugging. Available commands are: `pin_down`, "
"`touch_mode`, `pin_up`, `self_test`, `reset`. A BL-Touch V3.0 or V3.1 may "
"also support `set_5V_output_mode`, `set_OD_output_mode`, `output_mode_store`"
" commands."
msgstr ""

#: docs/G-Codes.md:block 48 (header)
msgid "BLTOUCH_STORE"
msgstr ""

#: docs/G-Codes.md:block 50 (header)
msgid "[configfile]"
msgstr ""

#: docs/G-Codes.md:block 51 (paragraph)
msgid "The configfile module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 52 (header)
msgid "SAVE_CONFIG"
msgstr ""

#: docs/G-Codes.md:block 54 (header)
msgid "[delayed_gcode]"
msgstr ""

#: docs/G-Codes.md:block 55 (paragraph)
msgid ""
"The following command is enabled if a [delayed_gcode config "
"section](Config_Reference.md#delayed_gcode) has been enabled (also see the "
"[template guide](Command_Templates.md#delayed-gcodes))."
msgstr ""

#: docs/G-Codes.md:block 56 (header)
msgid "UPDATE_DELAYED_GCODE"
msgstr ""

#: docs/G-Codes.md:block 58 (header)
msgid "[delta_calibrate]"
msgstr ""

#: docs/G-Codes.md:block 59 (paragraph)
msgid ""
"The following commands are available when the [delta_calibrate config "
"section](Config_Reference.md#linear-delta-kinematics) is enabled (also see "
"the [delta calibrate guide](Delta_Calibrate.md))."
msgstr ""

#: docs/G-Codes.md:block 60 (header)
msgid "DELTA_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 62 (header)
msgid "DELTA_ANALYZE"
msgstr ""

#: docs/G-Codes.md:block 64 (header)
msgid "[display]"
msgstr ""

#: docs/G-Codes.md:block 65 (paragraph)
msgid ""
"The following command is available when a [display config "
"section](Config_Reference.md#gcode_macro) is enabled."
msgstr ""

#: docs/G-Codes.md:block 66 (header)
msgid "SET_DISPLAY_GROUP"
msgstr ""

#: docs/G-Codes.md:block 68 (header)
msgid "[display_status]"
msgstr ""

#: docs/G-Codes.md:block 69 (paragraph)
msgid ""
"The display_status module is automatically loaded if a [display config "
"section](Config_Reference.md#display) is enabled. It provides the following "
"standard G-Code commands:"
msgstr ""

#: docs/G-Codes.md:block 71 (header)
msgid "[dual_carriage]"
msgstr ""

#: docs/G-Codes.md:block 72 (paragraph)
msgid ""
"The following command is available when the [dual_carriage config "
"section](Config_Reference.md#dual_carriage) is enabled."
msgstr ""

#: docs/G-Codes.md:block 73 (header)
msgid "SET_DUAL_CARRIAGE"
msgstr ""

#: docs/G-Codes.md:block 75 (header)
msgid "[endstop_phase]"
msgstr ""

#: docs/G-Codes.md:block 76 (paragraph)
msgid ""
"The following commands are available when an [endstop_phase config "
"section](Config_Reference.md#endstop_phase) is enabled (also see the "
"[endstop phase guide](Endstop_Phase.md))."
msgstr ""

#: docs/G-Codes.md:block 77 (header)
msgid "ENDSTOP_PHASE_CALIBRATE"
msgstr "ENDSTOP_PHASE_CALIBRATE"

#: docs/G-Codes.md:block 79 (header)
msgid "[extruder]"
msgstr ""

#: docs/G-Codes.md:block 80 (paragraph)
msgid ""
"The following commands are available if an [extruder config "
"section](Config_Reference.md#extruder) is enabled:"
msgstr ""

#: docs/G-Codes.md:block 81 (header)
msgid "ACTIVATE_EXTRUDER"
msgstr ""

#: docs/G-Codes.md:block 83 (header)
msgid "SET_PRESSURE_ADVANCE"
msgstr ""

#: docs/G-Codes.md:block 85 (header)
msgid "SET_EXTRUDER_ROTATION_DISTANCE"
msgstr ""

#: docs/G-Codes.md:block 87 (header)
msgid "SYNC_EXTRUDER_MOTION"
msgstr ""

#: docs/G-Codes.md:block 89 (header)
msgid "SET_EXTRUDER_STEP_DISTANCE"
msgstr ""

#: docs/G-Codes.md:block 90 (paragraph)
msgid "This command is deprecated and will be removed in the near future."
msgstr ""

#: docs/G-Codes.md:block 91 (header)
msgid "SYNC_STEPPER_TO_EXTRUDER"
msgstr ""

#: docs/G-Codes.md:block 93 (header)
msgid "[fan_generic]"
msgstr ""

#: docs/G-Codes.md:block 94 (paragraph)
msgid ""
"The following command is available when a [fan_generic config "
"section](Config_Reference.md#fan_generic) is enabled."
msgstr ""

#: docs/G-Codes.md:block 95 (header)
msgid "SET_FAN_SPEED"
msgstr ""

#: docs/G-Codes.md:block 96 (paragraph)
msgid ""
"`SET_FAN_SPEED FAN=config_name SPEED=<speed>` This command sets the speed of"
" a fan. \"speed\" must be between 0.0 and 1.0."
msgstr ""

#: docs/G-Codes.md:block 97 (header)
msgid "[firmware_retraction]"
msgstr ""

#: docs/G-Codes.md:block 98 (paragraph)
msgid ""
"The following standard G-Code commands are available when the "
"[firmware_retraction config "
"section](Config_Reference.md#firmware_retraction) is enabled. These commands"
" allow you to utilize the firmware retraction feature available in many "
"slicers, to reduce stringing during non-extrusion moves from one part of the"
" print to another. Appropriately configuring pressure advance reduces the "
"length of retraction required."
msgstr ""

#: docs/G-Codes.md:block 100 (paragraph)
msgid "The following additional commands are also available."
msgstr ""

#: docs/G-Codes.md:block 101 (header)
msgid "SET_RETRACTION"
msgstr ""

#: docs/G-Codes.md:block 103 (header)
msgid "GET_RETRACTION"
msgstr ""

#: docs/G-Codes.md:block 105 (header)
msgid "[filament_switch_sensor]"
msgstr ""

#: docs/G-Codes.md:block 106 (paragraph)
msgid ""
"The following command is available when a "
"[filament_switch_sensor](Config_Reference.md#filament_switch_sensor) or "
"[filament_motion_sensor](Config_Reference.md#filament_motion_sensor) config "
"section is enabled."
msgstr ""

#: docs/G-Codes.md:block 107 (header)
msgid "QUERY_FILAMENT_SENSOR"
msgstr ""

#: docs/G-Codes.md:block 108 (paragraph)
msgid ""
"`QUERY_FILAMENT_SENSOR SENSOR=<sensor_name>`: Queries the current status of "
"the filament sensor. The data displayed on the terminal will depend on the "
"sensor type defined in the configuration."
msgstr ""

#: docs/G-Codes.md:block 109 (header)
msgid "SET_FILAMENT_SENSOR"
msgstr ""

#: docs/G-Codes.md:block 114 (header)
msgid "[force_move]"
msgstr ""

#: docs/G-Codes.md:block 116 (header)
msgid "STEPPER_BUZZ"
msgstr ""

#: docs/G-Codes.md:block 118 (header)
msgid "FORCE_MOVE"
msgstr ""

#: docs/G-Codes.md:block 120 (header)
msgid "SET_KINEMATIC_POSITION"
msgstr ""

#: docs/G-Codes.md:block 122 (header)
msgid "[gcode]"
msgstr ""

#: docs/G-Codes.md:block 123 (paragraph)
msgid "The gcode module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 124 (header)
msgid "RESTART"
msgstr ""

#: docs/G-Codes.md:block 126 (header)
msgid "FIRMWARE_RESTART"
msgstr ""

#: docs/G-Codes.md:block 128 (header)
msgid "STATUS"
msgstr ""

#: docs/G-Codes.md:block 130 (header)
msgid "HELP"
msgstr ""

#: docs/G-Codes.md:block 132 (header)
msgid "[gcode_arcs]"
msgstr ""

#: docs/G-Codes.md:block 135 (header)
msgid "[gcode_macro]"
msgstr ""

#: docs/G-Codes.md:block 136 (paragraph)
msgid ""
"The following command is available when a [gcode_macro config "
"section](Config_Reference.md#gcode_macro) is enabled (also see the [command "
"templates guide](Command_Templates.md))."
msgstr ""

#: docs/G-Codes.md:block 137 (header)
msgid "SET_GCODE_VARIABLE"
msgstr ""

#: docs/G-Codes.md:block 139 (header)
msgid "[gcode_move]"
msgstr ""

#: docs/G-Codes.md:block 140 (paragraph)
msgid "The gcode_move module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 141 (header)
msgid "GET_POSITION"
msgstr ""

#: docs/G-Codes.md:block 143 (header)
msgid "SET_GCODE_OFFSET"
msgstr ""

#: docs/G-Codes.md:block 145 (header)
msgid "SAVE_GCODE_STATE"
msgstr ""

#: docs/G-Codes.md:block 147 (header)
msgid "RESTORE_GCODE_STATE"
msgstr ""

#: docs/G-Codes.md:block 149 (header)
msgid "[hall_filament_width_sensor]"
msgstr ""

#: docs/G-Codes.md:block 150 (paragraph)
msgid ""
"The following commands are available when the [tsl1401cl filament width "
"sensor config section](Config_Reference.md#tsl1401cl_filament_width_sensor) "
"or [hall filament width sensor config "
"section](Config_Reference.md#hall_filament_width_sensor) is enabled (also "
"see [TSLl401CL Filament Width Sensor](TSL1401CL_Filament_Width_Sensor.md) "
"and [Hall Filament Width Sensor](Hall_Filament_Width_Sensor.md)):"
msgstr ""

#: docs/G-Codes.md:block 151 (header)
msgid "QUERY_FILAMENT_WIDTH"
msgstr ""

#: docs/G-Codes.md:block 152 (paragraph)
msgid "`QUERY_FILAMENT_WIDTH`: Return the current measured filament width."
msgstr ""

#: docs/G-Codes.md:block 153 (header)
msgid "RESET_FILAMENT_WIDTH_SENSOR"
msgstr ""

#: docs/G-Codes.md:block 154 (paragraph)
msgid ""
"`RESET_FILAMENT_WIDTH_SENSOR`: Clear all sensor readings. Helpful after "
"filament change."
msgstr ""

#: docs/G-Codes.md:block 155 (header)
msgid "DISABLE_FILAMENT_WIDTH_SENSOR"
msgstr ""

#: docs/G-Codes.md:block 156 (paragraph)
msgid ""
"`DISABLE_FILAMENT_WIDTH_SENSOR`: Turn off the filament width sensor and stop"
" using it for flow control."
msgstr ""

#: docs/G-Codes.md:block 157 (header)
msgid "ENABLE_FILAMENT_WIDTH_SENSOR"
msgstr ""

#: docs/G-Codes.md:block 158 (paragraph)
msgid ""
"`ENABLE_FILAMENT_WIDTH_SENSOR`: Turn on the filament width sensor and start "
"using it for flow control."
msgstr ""

#: docs/G-Codes.md:block 159 (header)
msgid "QUERY_RAW_FILAMENT_WIDTH"
msgstr ""

#: docs/G-Codes.md:block 160 (paragraph)
msgid ""
"`QUERY_RAW_FILAMENT_WIDTH`: Return the current ADC channel readings and RAW "
"sensor value for calibration points."
msgstr ""

#: docs/G-Codes.md:block 161 (header)
msgid "ENABLE_FILAMENT_WIDTH_LOG"
msgstr ""

#: docs/G-Codes.md:block 162 (paragraph)
msgid "`ENABLE_FILAMENT_WIDTH_LOG`: Turn on diameter logging."
msgstr ""

#: docs/G-Codes.md:block 163 (header)
msgid "DISABLE_FILAMENT_WIDTH_LOG"
msgstr ""

#: docs/G-Codes.md:block 164 (paragraph)
msgid "`DISABLE_FILAMENT_WIDTH_LOG`: Turn off diameter logging."
msgstr ""

#: docs/G-Codes.md:block 165 (header)
msgid "[heaters]"
msgstr ""

#: docs/G-Codes.md:block 166 (paragraph)
msgid ""
"The heaters module is automatically loaded if a heater is defined in the "
"config file."
msgstr ""

#: docs/G-Codes.md:block 167 (header)
msgid "TURN_OFF_HEATERS"
msgstr ""

#: docs/G-Codes.md:block 169 (header)
msgid "TEMPERATURE_WAIT"
msgstr ""

#: docs/G-Codes.md:block 171 (header)
msgid "SET_HEATER_TEMPERATURE"
msgstr ""

#: docs/G-Codes.md:block 173 (header)
msgid "[idle_timeout]"
msgstr ""

#: docs/G-Codes.md:block 174 (paragraph)
msgid "The idle_timeout module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 175 (header)
msgid "SET_IDLE_TIMEOUT"
msgstr ""

#: docs/G-Codes.md:block 177 (header)
msgid "[input_shaper]"
msgstr ""

#: docs/G-Codes.md:block 178 (paragraph)
msgid ""
"The following command is enabled if an [input_shaper config "
"section](Config_Reference.md#input_shaper) has been enabled (also see the "
"[resonance compensation guide](Resonance_Compensation.md))."
msgstr ""

#: docs/G-Codes.md:block 179 (header)
msgid "SET_INPUT_SHAPER"
msgstr ""

#: docs/G-Codes.md:block 181 (header)
msgid "[manual_probe]"
msgstr ""

#: docs/G-Codes.md:block 182 (paragraph)
msgid "The manual_probe module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 183 (header)
msgid "MANUAL_PROBE"
msgstr ""

#: docs/G-Codes.md:block 186 (header)
msgid "Z_ENDSTOP_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 188 (header)
msgid "Z_OFFSET_APPLY_ENDSTOP"
msgstr ""

#: docs/G-Codes.md:block 190 (header)
msgid "[manual_stepper]"
msgstr ""

#: docs/G-Codes.md:block 191 (paragraph)
msgid ""
"The following command is available when a [manual_stepper config "
"section](Config_Reference.md#manual_stepper) is enabled."
msgstr ""

#: docs/G-Codes.md:block 192 (header)
msgid "MANUAL_STEPPER"
msgstr ""

#: docs/G-Codes.md:block 196 (header)
msgid "SET_LED"
msgstr ""

#: docs/G-Codes.md:block 198 (header)
msgid "[output_pin]"
msgstr ""

#: docs/G-Codes.md:block 199 (paragraph)
msgid ""
"The following command is available when an [output_pin config "
"section](Config_Reference.md#output_pin) is enabled."
msgstr ""

#: docs/G-Codes.md:block 200 (header)
msgid "SET_PIN"
msgstr ""

#: docs/G-Codes.md:block 202 (header)
msgid "[palette2]"
msgstr ""

#: docs/G-Codes.md:block 203 (paragraph)
msgid ""
"The following commands are available when the [palette2 config "
"section](Config_Reference.md#palette2) is enabled."
msgstr ""

#: docs/G-Codes.md:block 207 (header)
msgid "PALETTE_CONNECT"
msgstr ""

#: docs/G-Codes.md:block 209 (header)
msgid "PALETTE_DISCONNECT"
msgstr ""

#: docs/G-Codes.md:block 211 (header)
msgid "PALETTE_CLEAR"
msgstr ""

#: docs/G-Codes.md:block 213 (header)
msgid "PALETTE_CUT"
msgstr ""

#: docs/G-Codes.md:block 215 (header)
msgid "PALETTE_SMART_LOAD"
msgstr ""

#: docs/G-Codes.md:block 217 (header)
msgid "[pid_calibrate]"
msgstr ""

#: docs/G-Codes.md:block 218 (paragraph)
msgid ""
"The pid_calibrate module is automatically loaded if a heater is defined in "
"the config file."
msgstr ""

#: docs/G-Codes.md:block 219 (header)
msgid "PID_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 221 (header)
msgid "[pause_resume]"
msgstr ""

#: docs/G-Codes.md:block 223 (header)
msgid "PAUSE"
msgstr ""

#: docs/G-Codes.md:block 225 (header)
msgid "RESUME"
msgstr ""

#: docs/G-Codes.md:block 227 (header)
msgid "CLEAR_PAUSE"
msgstr ""

#: docs/G-Codes.md:block 229 (header)
msgid "CANCEL_PRINT"
msgstr ""

#: docs/G-Codes.md:block 231 (header)
msgid "[probe]"
msgstr ""

#: docs/G-Codes.md:block 232 (paragraph)
msgid ""
"The following commands are available when a [probe config "
"section](Config_Reference.md#probe) or [bltouch config "
"section](Config_Reference.md#bltouch) is enabled (also see the [probe "
"calibrate guide](Probe_Calibrate.md))."
msgstr ""

#: docs/G-Codes.md:block 233 (header)
msgid "PROBE"
msgstr ""

#: docs/G-Codes.md:block 235 (header)
msgid "QUERY_PROBE"
msgstr ""

#: docs/G-Codes.md:block 237 (header)
msgid "PROBE_ACCURACY"
msgstr ""

#: docs/G-Codes.md:block 239 (header)
msgid "PROBE_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 241 (header)
msgid "Z_OFFSET_APPLY_PROBE"
msgstr ""

#: docs/G-Codes.md:block 243 (header)
msgid "[query_adc]"
msgstr ""

#: docs/G-Codes.md:block 245 (header)
msgid "QUERY_ADC"
msgstr ""

#: docs/G-Codes.md:block 247 (header)
msgid "[query_endstops]"
msgstr ""

#: docs/G-Codes.md:block 248 (paragraph)
msgid ""
"The query_endstops module is automatically loaded. The following standard "
"G-Code commands are currently available, but using them is not recommended:"
msgstr ""

#: docs/G-Codes.md:block 250 (header)
msgid "QUERY_ENDSTOPS"
msgstr ""

#: docs/G-Codes.md:block 252 (header)
msgid "[resonance_tester]"
msgstr ""

#: docs/G-Codes.md:block 253 (paragraph)
msgid ""
"The following commands are available when a [resonance_tester config "
"section](Config_Reference.md#resonance_tester) is enabled (also see the "
"[measuring resonances guide](Measuring_Resonances.md))."
msgstr ""

#: docs/G-Codes.md:block 254 (header)
msgid "MEASURE_AXES_NOISE"
msgstr ""

#: docs/G-Codes.md:block 256 (header)
msgid "TEST_RESONANCES"
msgstr ""

#: docs/G-Codes.md:block 258 (header)
msgid "SHAPER_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 260 (header)
msgid "[respond]"
msgstr ""

#: docs/G-Codes.md:block 261 (paragraph)
msgid ""
"The following standard G-Code commands are available when the [respond "
"config section](Config_Reference.md#respond) is enabled:"
msgstr ""

#: docs/G-Codes.md:block 264 (header)
msgid "RESPOND"
msgstr ""

#: docs/G-Codes.md:block 265 (unordered list)
msgid ""
"`RESPOND TYPE=command MSG=\"<message>\"`: echo the message prepended with "
"`// `. OctoPrint can be configured to respond to these messages (e.g. "
"`RESPOND TYPE=command MSG=action:pause`)."
msgstr ""

#: docs/G-Codes.md:block 266 (header)
msgid "[save_variables]"
msgstr ""

#: docs/G-Codes.md:block 267 (paragraph)
msgid ""
"The following command is enabled if a [save_variables config "
"section](Config_Reference.md#save_variables) has been enabled."
msgstr ""

#: docs/G-Codes.md:block 268 (header)
msgid "SAVE_VARIABLE"
msgstr ""

#: docs/G-Codes.md:block 270 (header)
msgid "[screws_tilt_adjust]"
msgstr ""

#: docs/G-Codes.md:block 271 (paragraph)
msgid ""
"The following commands are available when the [screws_tilt_adjust config "
"section](Config_Reference.md#screws_tilt_adjust) is enabled (also see the "
"[manual level guide](Manual_Level.md#adjusting-bed-leveling-screws-using-"
"the-bed-probe))."
msgstr ""

#: docs/G-Codes.md:block 272 (header)
msgid "SCREWS_TILT_CALCULATE"
msgstr ""

#: docs/G-Codes.md:block 274 (header)
msgid "[sdcard_loop]"
msgstr ""

#: docs/G-Codes.md:block 275 (paragraph)
msgid ""
"When the [sdcard_loop config section](Config_Reference.md#sdcard_loop) is "
"enabled, the following extended commands are available."
msgstr ""

#: docs/G-Codes.md:block 276 (header)
msgid "SDCARD_LOOP_BEGIN"
msgstr ""

#: docs/G-Codes.md:block 277 (paragraph)
msgid ""
"`SDCARD_LOOP_BEGIN COUNT=<count>`: Begin a looped section in the SD print. A"
" count of 0 indicates that the section should be looped indefinitely."
msgstr ""

#: docs/G-Codes.md:block 278 (header)
msgid "SDCARD_LOOP_END"
msgstr ""

#: docs/G-Codes.md:block 280 (header)
msgid "SDCARD_LOOP_DESIST"
msgstr ""

#: docs/G-Codes.md:block 282 (header)
msgid "[servo]"
msgstr ""

#: docs/G-Codes.md:block 283 (paragraph)
msgid ""
"The following commands are available when a [servo config "
"section](Config_Reference.md#servo) is enabled."
msgstr ""

#: docs/G-Codes.md:block 284 (header)
msgid "SET_SERVO"
msgstr ""

#: docs/G-Codes.md:block 286 (header)
msgid "[skew_correction]"
msgstr ""

#: docs/G-Codes.md:block 287 (paragraph)
msgid ""
"The following commands are available when the [skew_correction config "
"section](Config_Reference.md#skew_correction) is enabled (also see the [Skew"
" Correction](Skew_Correction.md) guide)."
msgstr ""

#: docs/G-Codes.md:block 288 (header)
msgid "SET_SKEW"
msgstr ""

#: docs/G-Codes.md:block 290 (header)
msgid "GET_CURRENT_SKEW"
msgstr ""

#: docs/G-Codes.md:block 292 (header)
msgid "CALC_MEASURED_SKEW"
msgstr ""

#: docs/G-Codes.md:block 294 (header)
msgid "SKEW_PROFILE"
msgstr ""

#: docs/G-Codes.md:block 295 (paragraph)
msgid ""
"`SKEW_PROFILE [LOAD=<name>] [SAVE=<name>] [REMOVE=<name>]`: Profile "
"management for skew_correction. LOAD will restore skew state from the "
"profile matching the supplied name. SAVE will save the current skew state to"
" a profile matching the supplied name. Remove will delete the profile "
"matching the supplied name from persistent memory. Note that after SAVE or "
"REMOVE operations have been run the SAVE_CONFIG gcode must be run to make "
"the changes to persistent memory permanent."
msgstr ""

#: docs/G-Codes.md:block 296 (header)
msgid "[stepper_enable]"
msgstr ""

#: docs/G-Codes.md:block 297 (paragraph)
msgid "The stepper_enable module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 298 (header)
msgid "SET_STEPPER_ENABLE"
msgstr ""

#: docs/G-Codes.md:block 300 (header)
msgid "[temperature_fan]"
msgstr ""

#: docs/G-Codes.md:block 301 (paragraph)
msgid ""
"The following command is available when a [temperature_fan config "
"section](Config_Reference.md#temperature_fan) is enabled."
msgstr ""

#: docs/G-Codes.md:block 302 (header)
msgid "SET_TEMPERATURE_FAN_TARGET"
msgstr ""

#: docs/G-Codes.md:block 303 (paragraph)
msgid ""
"`SET_TEMPERATURE_FAN_TARGET temperature_fan=<temperature_fan_name> "
"[target=<target_temperature>] [min_speed=<min_speed>] "
"[max_speed=<max_speed>]`: Sets the target temperature for a temperature_fan."
" If a target is not supplied, it is set to the specified temperature in the "
"config file. If speeds are not supplied, no change is applied."
msgstr ""

#: docs/G-Codes.md:block 304 (header)
msgid "[tmcXXXX]"
msgstr ""

#: docs/G-Codes.md:block 305 (paragraph)
msgid ""
"The following commands are available when any of the [tmcXXXX config "
"sections](Config_Reference.md#tmc-stepper-driver-configuration) are enabled."
msgstr ""

#: docs/G-Codes.md:block 306 (header)
msgid "DUMP_TMC"
msgstr ""

#: docs/G-Codes.md:block 308 (header)
msgid "INIT_TMC"
msgstr ""

#: docs/G-Codes.md:block 309 (paragraph)
msgid ""
"`INIT_TMC STEPPER=<name>`: This command will initialize the TMC registers. "
"Needed to re-enable the driver if power to the chip is turned off then back "
"on."
msgstr ""

#: docs/G-Codes.md:block 310 (header)
msgid "SET_TMC_CURRENT"
msgstr ""

#: docs/G-Codes.md:block 312 (header)
msgid "SET_TMC_FIELD"
msgstr ""

#: docs/G-Codes.md:block 314 (header)
msgid "[toolhead]"
msgstr ""

#: docs/G-Codes.md:block 315 (paragraph)
msgid "The toolhead module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 316 (header)
msgid "SET_VELOCITY_LIMIT"
msgstr ""

#: docs/G-Codes.md:block 318 (header)
msgid "[tuning_tower]"
msgstr ""

#: docs/G-Codes.md:block 319 (paragraph)
msgid "The tuning_tower module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 320 (header)
msgid "TUNING_TOWER"
msgstr ""

#: docs/G-Codes.md:block 322 (unordered list)
msgid ""
"`FACTOR`: The value changes at a rate of `factor` per millimeter. The "
"formula used is: `value = start + factor * z_height`. You can plug the "
"optimum Z height directly into the formula to determine the optimum "
"parameter value."
msgstr ""

#: docs/G-Codes.md:block 322 (unordered list)
msgid ""
"`FACTOR` and `BAND`: The value changes at an average rate of `factor` per "
"millimeter, but in discrete bands where the adjustment will only be made "
"every `BAND` millimeters of Z height. The formula used is: `value = start + "
"factor * ((floor(z_height / band) + .5) * band)`."
msgstr ""

#: docs/G-Codes.md:block 322 (unordered list)
msgid ""
"`STEP_DELTA` and `STEP_HEIGHT`: The value changes by `STEP_DELTA` every "
"`STEP_HEIGHT` millimeters. The formula used is: `value = start + step_delta "
"* floor(z_height / step_height)`. You can simply count bands or read tuning "
"tower labels to determine the optimum value."
msgstr ""

#: docs/G-Codes.md:block 323 (header)
msgid "[virtual_sdcard]"
msgstr ""

#: docs/G-Codes.md:block 324 (paragraph)
msgid ""
"Klipper supports the following standard G-Code commands if the "
"[virtual_sdcard config section](Config_Reference.md#virtual_sdcard) is "
"enabled:"
msgstr ""

#: docs/G-Codes.md:block 326 (paragraph)
msgid ""
"In addition, the following extended commands are available when the "
"\"virtual_sdcard\" config section is enabled."
msgstr ""

#: docs/G-Codes.md:block 327 (header)
msgid "SDCARD_PRINT_FILE"
msgstr ""

#: docs/G-Codes.md:block 328 (paragraph)
msgid ""
"`SDCARD_PRINT_FILE FILENAME=<filename>`: Load a file and start SD print."
msgstr ""

#: docs/G-Codes.md:block 329 (header)
msgid "SDCARD_RESET_FILE"
msgstr ""

#: docs/G-Codes.md:block 330 (paragraph)
msgid "`SDCARD_RESET_FILE`: Unload file and clear SD state."
msgstr ""

#: docs/G-Codes.md:block 331 (header)
msgid "[z_tilt]"
msgstr ""

#: docs/G-Codes.md:block 332 (paragraph)
msgid ""
"The following commands are available when the [z_tilt config "
"section](Config_Reference.md#z_tilt) is enabled."
msgstr ""

#: docs/G-Codes.md:block 333 (header)
msgid "Z_TILT_ADJUST"
msgstr ""

#: docs/G-Codes.md:block 7 (paragraph)
msgid ""
"Klipper's goal is to support the G-Code commands produced by common 3rd "
"party software (eg, OctoPrint, Printrun, Slic3r, Cura, etc.) in their "
"standard configurations. It is not a goal to support every possible G-Code "
"command. Instead, Klipper prefers human readable [\"extended G-Code "
"commands\"](#additional-commands). Similarly, the G-Code terminal output is "
"only intended to be human readable - see the [API Server "
"document](API_Server.md) if controlling Klipper from external software."
msgstr ""

#: docs/G-Codes.md:block 139 (paragraph)
msgid ""
"`GET_POSITION`: Return information on the current location of the toolhead. "
"See the developer documentation of [GET_POSITION "
"output](Code_Overview.md#coordinate-systems) for more information."
msgstr ""

#: docs/G-Codes.md:block 82 (paragraph)
msgid ""
"`ACTIVATE_EXTRUDER EXTRUDER=<config_name>`: In a printer with multiple "
"[extruder](Config_Reference.md#extruder) config sections, this command "
"changes the active hotend."
msgstr ""

#: docs/G-Codes.md:block 22 (header)
msgid "[angle]"
msgstr ""

#: docs/G-Codes.md:block 23 (paragraph)
msgid ""
"The following commands are available when an [angle config "
"section](Config_Reference.md#angle) is enabled."
msgstr ""

#: docs/G-Codes.md:block 24 (header)
msgid "ANGLE_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 25 (paragraph)
msgid ""
"`ANGLE_CALIBRATE CHIP=<chip_name>`: Perform angle calibration on the given "
"sensor (there must be an `[angle chip_name]` config section that has "
"specified a `stepper` parameter). IMPORTANT - this tool will command the "
"stepper motor to move without checking the normal kinematic boundary limits."
" Ideally the motor should be disconnected from any printer carriage before "
"performing calibration. If the stepper can not be disconnected from the "
"printer, make sure the carriage is near the center of its rail before "
"starting calibration. (The stepper motor may move forwards or backwards two "
"full rotations during this test.) After completing this test use the "
"`SAVE_CONFIG` command to save the calibration data to the config file. In "
"order to use this tool the Python \"numpy\" package must be installed (see "
"the [measuring resonance document](Measuring_Resonances.md#software-"
"installation) for more information)."
msgstr ""

#: docs/G-Codes.md:block 26 (header)
msgid "ANGLE_DEBUG_READ"
msgstr ""

#: docs/G-Codes.md:block 27 (paragraph)
msgid ""
"`ANGLE_DEBUG_READ CHIP=<config_name> REG=<register>`: Queries sensor "
"register \"register\" (e.g. 44 or 0x2C). Can be useful for debugging "
"purposes. This is only available for tle5012b chips."
msgstr ""

#: docs/G-Codes.md:block 28 (header)
msgid "ANGLE_DEBUG_WRITE"
msgstr ""

#: docs/G-Codes.md:block 29 (paragraph)
msgid ""
"`ANGLE_DEBUG_WRITE CHIP=<config_name> REG=<register> VAL=<value>`: Writes "
"raw \"value\" into register \"register\". Both \"value\" and \"register\" "
"can be a decimal or a hexadecimal integer. Use with care, and refer to "
"sensor data sheet for the reference. This is only available for tle5012b "
"chips."
msgstr ""

#: docs/G-Codes.md:block 199 (header)
msgid "[led]"
msgstr ""

#: docs/G-Codes.md:block 200 (paragraph)
msgid ""
"The following command is available when any of the [led config "
"sections](Config_Reference.md#leds) are enabled."
msgstr ""

#: docs/G-Codes.md:block 202 (paragraph)
msgid ""
"`SET_LED LED=<config_name> RED=<value> GREEN=<value> BLUE=<value> "
"WHITE=<value> [INDEX=<index>] [TRANSMIT=0] [SYNC=1]`: This sets the LED "
"output. Each color `<value>` must be between 0.0 and 1.0. The WHITE option "
"is only valid on RGBW LEDs. If the LED supports multiple chips in a daisy-"
"chain then one may specify INDEX to alter the color of just the given chip "
"(1 for the first chip, 2 for the second, etc.). If INDEX is not provided "
"then all LEDs in the daisy-chain will be set to the provided color. If "
"TRANSMIT=0 is specified then the color change will only be made on the next "
"SET_LED command that does not specify TRANSMIT=0; this may be useful in "
"combination with the INDEX parameter to batch multiple updates in a daisy-"
"chain. By default, the SET_LED command will sync it's changes with other "
"ongoing gcode commands. This can lead to undesirable behavior if LEDs are "
"being set while the printer is not printing as it will reset the idle "
"timeout. If careful timing is not needed, the optional SYNC=0 parameter can "
"be specified to apply the changes without resetting the idle timeout."
msgstr ""

#: docs/G-Codes.md:block 203 (header)
msgid "SET_LED_TEMPLATE"
msgstr ""

#: docs/G-Codes.md:block 204 (paragraph)
msgid ""
"`SET_LED_TEMPLATE LED=<led_name> TEMPLATE=<template_name> "
"[<param_x>=<literal>] [INDEX=<index>]`: Assign a "
"[display_template](Config_Reference.md#display_template) to a given "
"[LED](Config_Reference.md#leds). For example, if one defined a "
"`[display_template my_led_template]` config section then one could assign "
"`TEMPLATE=my_led_template` here. The display_template should produce a comma"
" separated string containing four floating point numbers corresponding to "
"red, green, blue, and white color settings. The template will be "
"continuously evaluated and the LED will be automatically set to the "
"resulting colors. One may set display_template parameters to use during "
"template evaluation (parameters will be parsed as Python literals). If INDEX"
" is not specified then all chips in the LED's daisy-chain will be set to the"
" template, otherwise only the chip with the given index will be updated. If "
"TEMPLATE is an empty string then this command will clear any previous "
"template assigned to the LED (one can then use `SET_LED` commands to manage "
"the LED's color settings)."
msgstr ""

#: docs/G-Codes.md:block 251 (paragraph)
msgid "The query_adc module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 303 (header)
msgid "[smart_effector]"
msgstr ""

#: docs/G-Codes.md:block 304 (paragraph)
msgid ""
"Several commands are available when a [smart_effector config "
"section](Config_Reference.md#smart_effector) is enabled. Be sure to check "
"the official documentation for the Smart Effector on the [Duet3D "
"Wiki](https://duet3d.dozuki.com/Wiki/Smart_effector_and_carriage_adapters_for_delta_printer)"
" before changing the Smart Effector parameters. Also check the [probe "
"calibration guide](Probe_Calibrate.md)."
msgstr ""

#: docs/G-Codes.md:block 305 (header)
msgid "SET_SMART_EFFECTOR"
msgstr ""

#: docs/G-Codes.md:block 306 (paragraph)
msgid ""
"`SET_SMART_EFFECTOR [SENSITIVITY=<sensitivity>] [ACCEL=<accel>] "
"[RECOVERY_TIME=<time>]`: Set the Smart Effector parameters. When "
"`SENSITIVITY` is specified, the respective value is written to the "
"SmartEffector EEPROM (requires `control_pin` to be provided). Acceptable "
"`<sensitivity>` values are 0..255, the default is 50. Lower values require "
"less nozzle contact force to trigger (but there is a higher risk of false "
"triggering due to vibrations during probing), and higher values reduce false"
" triggering (but require larger contact force to trigger). Since the "
"sensitivity is written to EEPROM, it is preserved after the shutdown, and so"
" it does not need to be configured on every printer startup. `ACCEL` and "
"`RECOVERY_TIME` allow to override the corresponding parameters at run-time, "
"see the [config section](Config_Reference.md#smart_effector) of Smart "
"Effector for more info on those parameters."
msgstr ""

#: docs/G-Codes.md:block 307 (header)
msgid "RESET_SMART_EFFECTOR"
msgstr ""

#: docs/G-Codes.md:block 308 (paragraph)
msgid ""
"`RESET_SMART_EFFECTOR`: Resets Smart Effector sensitivity to its factory "
"settings. Requires `control_pin` to be provided in the config section."
msgstr ""

#: docs/G-Codes.md:block 11 (paragraph)
msgid ""
"This section is organized by Klipper module name, which generally follows "
"the section names specified in the [printer configuration "
"file](Config_Reference.md). Note that some modules are automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 87 (header)
msgid "[exclude_object]"
msgstr ""

#: docs/G-Codes.md:block 88 (paragraph)
msgid ""
"The following commands are available when an [exclude_object config "
"section](Config_Reference.md#exclude_object) is enabled (also see the "
"[exclude object guide](Exclude_Object.md)):"
msgstr ""

#: docs/G-Codes.md:block 89 (header)
msgid "`EXCLUDE_OBJECT`"
msgstr ""

#: docs/G-Codes.md:block 90 (paragraph)
msgid ""
"`EXCLUDE_OBJECT [NAME=object_name] [CURRENT=1] [RESET=1]`: With no "
"parameters, this will return a list of all currently excluded objects."
msgstr ""

#: docs/G-Codes.md:block 91 (paragraph)
msgid ""
"When the `NAME` parameter is given, the named object will be excluded from "
"printing."
msgstr ""

#: docs/G-Codes.md:block 92 (paragraph)
msgid ""
"When the `CURRENT` parameter is given, the current object will be excluded "
"from printing."
msgstr ""

#: docs/G-Codes.md:block 93 (paragraph)
msgid ""
"When the `RESET` parameter is given, the list of excluded objects will be "
"cleared. Additionally including `NAME` will only reset the named object. "
"This **can** cause print failures, if layers were already skipped."
msgstr ""

#: docs/G-Codes.md:block 94 (header)
msgid "`EXCLUDE_OBJECT_DEFINE`"
msgstr ""

#: docs/G-Codes.md:block 95 (paragraph)
msgid ""
"`EXCLUDE_OBJECT_DEFINE [NAME=object_name [CENTER=X,Y] [POLYGON=[[x,y],...]] "
"[RESET=1] [JSON=1]`: Provides a summary of an object in the file."
msgstr ""

#: docs/G-Codes.md:block 96 (paragraph)
msgid ""
"With no parameters provided, this will list the defined objects known to "
"Klipper. Returns a list of strings, unless the `JSON` parameter is given, "
"when it will return object details in json format."
msgstr ""

#: docs/G-Codes.md:block 97 (paragraph)
msgid ""
"When the `NAME` parameter is included, this defines an object to be "
"excluded."
msgstr ""

#: docs/G-Codes.md:block 98 (unordered list)
msgid ""
"`NAME`: This parameter is required. It is the identifier used by other "
"commands in this module."
msgstr ""

#: docs/G-Codes.md:block 98 (unordered list)
msgid "`CENTER`: An X,Y coordinate for the object."
msgstr ""

#: docs/G-Codes.md:block 98 (unordered list)
msgid ""
"`POLYGON`: An array of X,Y coordinates that provide an outline for the "
"object."
msgstr ""

#: docs/G-Codes.md:block 99 (paragraph)
msgid ""
"When the `RESET` parameter is provided, all defined objects will be cleared,"
" and the `[exclude_object]` module will be reset."
msgstr ""

#: docs/G-Codes.md:block 100 (header)
msgid "`EXCLUDE_OBJECT_START`"
msgstr ""

#: docs/G-Codes.md:block 101 (paragraph)
msgid ""
"`EXCLUDE_OBJECT_START NAME=object_name`: This command takes a `NAME` "
"parameter and denotes the start of the gcode for an object on the current "
"layer."
msgstr ""

#: docs/G-Codes.md:block 102 (header)
msgid "`EXCLUDE_OBJECT_END`"
msgstr ""

#: docs/G-Codes.md:block 103 (paragraph)
msgid ""
"`EXCLUDE_OBJECT_END [NAME=object_name]`: Denotes the end of the object's "
"gcode for the layer. It is paired with `EXCLUDE_OBJECT_START`. A `NAME` "
"parameter is optional, and will only warn when the provided name does not "
"match the current object."
msgstr ""

#: docs/G-Codes.md:block 109 (paragraph)
msgid ""
"`SET_PRESSURE_ADVANCE [EXTRUDER=<config_name>] [ADVANCE=<pressure_advance>] "
"[SMOOTH_TIME=<pressure_advance_smooth_time>]`: Set pressure advance "
"parameters of an extruder stepper (as defined in an "
"[extruder](Config_Reference.md#extruder) or "
"[extruder_stepper](Config_Reference.md#extruder_stepper) config section). If"
" EXTRUDER is not specified, it defaults to the stepper defined in the active"
" hotend."
msgstr ""

#: docs/G-Codes.md:block 111 (paragraph)
msgid ""
"`SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=<config_name> "
"[DISTANCE=<distance>]`: Set a new value for the provided extruder stepper's "
"\"rotation distance\" (as defined in an "
"[extruder](Config_Reference.md#extruder) or "
"[extruder_stepper](Config_Reference.md#extruder_stepper) config section). If"
" the rotation distance is a negative number then the stepper motion will be "
"inverted (relative to the stepper direction specified in the config file). "
"Changed settings are not retained on Klipper reset. Use with caution as "
"small changes can result in excessive pressure between extruder and hotend. "
"Do proper calibration with filament before use. If 'DISTANCE' value is not "
"provided then this command will return the current rotation distance."
msgstr ""

#: docs/G-Codes.md:block 113 (paragraph)
msgid ""
"`SYNC_EXTRUDER_MOTION EXTRUDER=<name> MOTION_QUEUE=<name>`: This command "
"will cause the stepper specified by EXTRUDER (as defined in an "
"[extruder](Config_Reference.md#extruder) or "
"[extruder_stepper](Config_Reference.md#extruder_stepper) config section) to "
"become synchronized to the movement of an extruder specified by MOTION_QUEUE"
" (as defined in an [extruder](Config_Reference.md#extruder) config section)."
" If MOTION_QUEUE is an empty string then the stepper will be desynchronized "
"from all extruder movement."
msgstr ""

#: docs/G-Codes.md:block 137 (paragraph)
msgid ""
"The force_move module is automatically loaded, however some commands require"
" setting `enable_force_move` in the [printer "
"config](Config_Reference.md#force_move)."
msgstr ""

#: docs/G-Codes.md:block 281 (paragraph)
msgid ""
"`TEST_RESONANCES AXIS=<axis> OUTPUT=<resonances,raw_data> [NAME=<name>] "
"[FREQ_START=<min_freq>] [FREQ_END=<max_freq>] [HZ_PER_SEC=<hz_per_sec>] "
"[CHIPS=<adxl345_chip_name>] [POINT=x,y,z] [INPUT_SHAPING=[<0:1>]]`: Runs the"
" resonance test in all configured probe points for the requested \"axis\" "
"and measures the acceleration using the accelerometer chips configured for "
"the respective axis. \"axis\" can either be X or Y, or specify an arbitrary "
"direction as `AXIS=dx,dy`, where dx and dy are floating point numbers "
"defining a direction vector (e.g. `AXIS=X`, `AXIS=Y`, or `AXIS=1,-1` to "
"define a diagonal direction). Note that `AXIS=dx,dy` and `AXIS=-dx,-dy` is "
"equivalent. `adxl345_chip_name` can be one or more configured adxl345 "
"chip,delimited with comma, for example `CHIPS=\"adxl345, adxl345 rpi\"`. "
"Note that `adxl345` can be omitted from named adxl345 chips. If POINT is "
"specified it will override the point(s) configured in `[resonance_tester]`. "
"If `INPUT_SHAPING=0` or not set(default), disables input shaping for the "
"resonance testing, because it is not valid to run the resonance testing with"
" the input shaper enabled. `OUTPUT` parameter is a comma-separated list of "
"which outputs will be written. If `raw_data` is requested, then the raw "
"accelerometer data is written into a file or a series of files "
"`/tmp/raw_data_<axis>_[<chip_name>_][<point>_]<name>.csv` with (`<point>_` "
"part of the name generated only if more than 1 probe point is configured or "
"POINT is specified). If `resonances` is specified, the frequency response is"
" calculated (across all probe points) and written into "
"`/tmp/resonances_<axis>_<name>.csv` file. If unset, OUTPUT defaults to "
"`resonances`, and NAME defaults to the current time in \"YYYYMMDD_HHMMSS\" "
"format."
msgstr ""

#: docs/G-Codes.md:block 79 (paragraph)
msgid "Also provided is the following extended G-Code command:"
msgstr ""

#: docs/G-Codes.md:block 80 (unordered list)
msgid ""
"`SET_DISPLAY_TEXT MSG=<message>`: Performs the equivalent of M117, setting "
"the supplied `MSG` as the current display message. If `MSG` is omitted the "
"display will be cleared."
msgstr ""

#: docs/G-Codes.md:block 291 (unordered list)
msgid ""
"`RESPOND TYPE=echo_no_space MSG=\"<message>\"`: echo the message prepended "
"with `echo:` without a space between prefix and message, helpful for "
"compatibility with some octoprint plugins that expect very specific "
"formatting."
msgstr ""

#: docs/G-Codes.md:block 218 (header)
msgid "[mcp4018]"
msgstr ""

#: docs/G-Codes.md:block 219 (paragraph)
msgid ""
"The following command is available when a [mcp4018 config "
"section](Config_Reference.md#mcp4018) is enabled."
msgstr ""

#: docs/G-Codes.md:block 220 (header)
msgid "SET_DIGIPOT"
msgstr ""

#: docs/G-Codes.md:block 221 (paragraph)
msgid ""
"`SET_DIGIPOT DIGIPOT=config_name WIPER=<value>`: This command will change "
"the current value of the digipot. This value should typically be between 0.0"
" and 1.0, unless a 'scale' is defined in the config. When 'scale' is "
"defined, then this value should be between 0.0 and 'scale'."
msgstr ""

#: docs/G-Codes.md:block 261 (header)
msgid "[print_stats]"
msgstr ""

#: docs/G-Codes.md:block 262 (paragraph)
msgid "The print_stats module is automatically loaded."
msgstr ""

#: docs/G-Codes.md:block 263 (header)
msgid "SET_PRINT_STATS_INFO"
msgstr ""

#: docs/G-Codes.md:block 264 (paragraph)
msgid ""
"`SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>] [CURRENT_LAYER= "
"<current_layer>]`: Pass slicer info like layer act and total to Klipper. Add"
" `SET_PRINT_STATS_INFO [TOTAL_LAYER=<total_layer_count>]` to your slicer "
"start gcode section and `SET_PRINT_STATS_INFO [CURRENT_LAYER= "
"<current_layer>]` at the layer change gcode section to pass layer "
"information from your slicer to Klipper."
msgstr ""

#: docs/G-Codes.md:block 371 (header)
msgid "[z_thermal_adjust]"
msgstr ""

#: docs/G-Codes.md:block 372 (paragraph)
msgid ""
"The following commands are available when the [z_thermal_adjust config "
"section](Config_Reference.md#z_thermal_adjust) is enabled."
msgstr ""

#: docs/G-Codes.md:block 373 (header)
msgid "SET_Z_THERMAL_ADJUST"
msgstr ""

#: docs/G-Codes.md:block 374 (paragraph)
msgid ""
"`SET_Z_THERMAL_ADJUST [ENABLE=<0:1>] [TEMP_COEFF=<value>] "
"[REF_TEMP=<value>]`: Enable or disable the Z thermal adjustment with "
"`ENABLE`. Disabling does not remove any adjustment already applied, but will"
" freeze the current adjustment value - this prevents potentially unsafe "
"downward Z movement. Re-enabling can potentially cause upward tool movement "
"as the adjustment is updated and applied. `TEMP_COEFF` allows run-time "
"tuning of the adjustment temperature coefficient (i.e. the `TEMP_COEFF` "
"config parameter). `TEMP_COEFF` values are not saved to the config. "
"`REF_TEMP` manually overrides the reference temperature typically set during"
" homing (for use in e.g. non-standard homing routines) - will be reset "
"automatically upon homing."
msgstr ""

#: docs/G-Codes.md:block 158 (unordered list)
msgid ""
"Arc Move Clockwise (G2), Arc Move Counter-clockwise (G3): `G2|G3 [X<pos>] "
"[Y<pos>] [Z<pos>] [E<pos>] [F<speed>] I<value> J<value>|I<value> "
"K<value>|J<value> K<value>`"
msgstr ""

#: docs/G-Codes.md:block 158 (unordered list)
msgid "Arc Plane Select: G17 (XY plane), G18 (XZ plane), G19 (YZ plane)"
msgstr ""

#: docs/G-Codes.md:block 231 (paragraph)
msgid ""
"`SET_PIN PIN=config_name VALUE=<value> [CYCLE_TIME=<cycle_time>]`: Set the "
"pin to the given output `VALUE`. VALUE should be 0 or 1 for \"digital\" "
"output pins. For PWM pins, set to a value between 0.0 and 1.0, or between "
"0.0 and `scale` if a scale is configured in the output_pin config section."
msgstr ""

#: docs/G-Codes.md:block 232 (paragraph)
msgid ""
"Some pins (currently only \"soft PWM\" pins) support setting an explicit "
"cycle time using the CYCLE_TIME parameter (specified in seconds). Note that "
"the CYCLE_TIME parameter is not stored between SET_PIN commands (any SET_PIN"
" command without an explicit CYCLE_TIME parameter will use the `cycle_time` "
"specified in the output_pin config section)."
msgstr ""

#: docs/G-Codes.md:block 33 (paragraph)
msgid ""
"`BED_MESH_CALIBRATE [METHOD=manual] [HORIZONTAL_MOVE_Z=<value>] "
"[<probe_parameter>=<value>] [<mesh_parameter>=<value>]`: This command probes"
" the bed using generated points specified by the parameters in the config. "
"After probing, a mesh is generated and z-movement is adjusted according to "
"the mesh. See the PROBE command for details on the optional probe "
"parameters. If METHOD=manual is specified then the manual probing tool is "
"activated - see the MANUAL_PROBE command above for details on the additional"
" commands available while this tool is active. The optional "
"`HORIZONTAL_MOVE_Z` value overrides the `horizontal_move_z` option specified"
" in the config file."
msgstr ""

#: docs/G-Codes.md:block 51 (paragraph)
msgid ""
"`BED_TILT_CALIBRATE [METHOD=manual] [HORIZONTAL_MOVE_Z=<value>] "
"[<probe_parameter>=<value>]`: This command will probe the points specified "
"in the config and then recommend updated x and y tilt adjustments. See the "
"PROBE command for details on the optional probe parameters. If METHOD=manual"
" is specified then the manual probing tool is activated - see the "
"MANUAL_PROBE command above for details on the additional commands available "
"while this tool is active. The optional `HORIZONTAL_MOVE_Z` value overrides "
"the `horizontal_move_z` option specified in the config file."
msgstr ""

#: docs/G-Codes.md:block 69 (paragraph)
msgid ""
"`DELTA_CALIBRATE [METHOD=manual] [HORIZONTAL_MOVE_Z=<value>] "
"[<probe_parameter>=<value>]`: This command will probe seven points on the "
"bed and recommend updated endstop positions, tower angles, and radius. See "
"the PROBE command for details on the optional probe parameters. If "
"METHOD=manual is specified then the manual probing tool is activated - see "
"the MANUAL_PROBE command above for details on the additional commands "
"available while this tool is active. The optional `HORIZONTAL_MOVE_Z` value "
"overrides the `horizontal_move_z` option specified in the config file."
msgstr ""

#: docs/G-Codes.md:block 308 (paragraph)
msgid ""
"`SCREWS_TILT_CALCULATE [DIRECTION=CW|CCW] [MAX_DEVIATION=<value>] "
"[HORIZONTAL_MOVE_Z=<value>] [<probe_parameter>=<value>]`: This command will "
"invoke the bed screws adjustment tool. It will command the nozzle to "
"different locations (as defined in the config file) probing the z height and"
" calculate the number of knob turns to adjust the bed level. If DIRECTION is"
" specified, the knob turns will all be in the same direction, clockwise (CW)"
" or counterclockwise (CCW). See the PROBE command for details on the "
"optional probe parameters. IMPORTANT: You MUST always do a G28 before using "
"this command. If MAX_DEVIATION is specified, the command will raise a gcode "
"error if any difference in the screw height relative to the base screw "
"height is greater than the value provided. The optional `HORIZONTAL_MOVE_Z` "
"value overrides the `horizontal_move_z` option specified in the config file."
msgstr ""

#: docs/G-Codes.md:block 348 (paragraph)
msgid ""
"`DUMP_TMC STEPPER=<name> [REGISTER=<name>]`: This command will read all TMC "
"driver registers and report their values. If a REGISTER is provided, only "
"the specified register will be dumped."
msgstr ""

#: docs/G-Codes.md:block 352 (paragraph)
msgid ""
"`SET_TMC_CURRENT STEPPER=<name> CURRENT=<amps> HOLDCURRENT=<amps>`: This "
"will adjust the run and hold currents of the TMC driver. `HOLDCURRENT` is "
"not applicable to tmc2660 drivers. When used on a driver which has the "
"`globalscaler` field (tmc5160 and tmc2240), if StealthChop2 is used, the "
"stepper must be held at standstill for >130ms so that the driver executes "
"the AT#1 calibration."
msgstr ""

#: docs/G-Codes.md:block 354 (paragraph)
msgid ""
"`SET_TMC_FIELD STEPPER=<name> FIELD=<field> VALUE=<value> VELOCITY=<value>`:"
" This will alter the value of the specified register field of the TMC "
"driver. This command is intended for low-level diagnostics and debugging "
"only because changing the fields during run-time can lead to undesired and "
"potentially dangerous behavior of your printer. Permanent changes should be "
"made using the printer configuration file instead. No sanity checks are "
"performed for the given values. A VELOCITY can also be specified instead of "
"a VALUE. This velocity is converted to the 20bit TSTEP based value "
"representation. Only use the VELOCITY argument for fields that represent "
"velocities."
msgstr ""

#: docs/G-Codes.md:block 379 (paragraph)
msgid ""
"`Z_TILT_ADJUST [HORIZONTAL_MOVE_Z=<value>] [<probe_parameter>=<value>]`: "
"This command will probe the points specified in the config and then make "
"independent adjustments to each Z stepper to compensate for tilt. See the "
"PROBE command for details on the optional probe parameters. The optional "
"`HORIZONTAL_MOVE_Z` value overrides the `horizontal_move_z` option specified"
" in the config file."
msgstr ""

#: docs/G-Codes.md:block 84 (paragraph)
msgid ""
"`SET_DUAL_CARRIAGE CARRIAGE=[0|1] [MODE=[PRIMARY|COPY|MIRROR]]`: This "
"command will change the mode of the specified carriage. If no `MODE` is "
"provided it defaults to `PRIMARY`. Setting the mode to `PRIMARY` deactivates"
" the other carriage and makes the specified carriage execute subsequent "
"G-Code commands as-is. `COPY` and `MIRROR` modes are supported only for "
"`CARRIAGE=1`. When set to either of these modes, carriage 1 will then track "
"the subsequent moves of the carriage 0 and either copy relative movements of"
" it (in `COPY` mode) or execute them in the opposite (mirror) direction (in "
"`MIRROR` mode)."
msgstr ""

#: docs/G-Codes.md:block 85 (header)
msgid "SAVE_DUAL_CARRIAGE_STATE"
msgstr ""

#: docs/G-Codes.md:block 86 (paragraph)
msgid ""
"`SAVE_DUAL_CARRIAGE_STATE [NAME=<state_name>]`: Save the current positions "
"of the dual carriages and their modes. Saving and restoring DUAL_CARRIAGE "
"state can be useful in scripts and macros, as well as in homing routine "
"overrides. If NAME is provided it allows one to name the saved state to the "
"given string. If NAME is not provided it defaults to \"default\"."
msgstr ""

#: docs/G-Codes.md:block 87 (header)
msgid "RESTORE_DUAL_CARRIAGE_STATE"
msgstr ""

#: docs/G-Codes.md:block 88 (paragraph)
msgid ""
"`RESTORE_DUAL_CARRIAGE_STATE [NAME=<state_name>] [MOVE=[0|1] "
"[MOVE_SPEED=<speed>]]`: Restore the previously saved positions of the dual "
"carriages and their modes, unless \"MOVE=0\" is specified, in which case "
"only the saved modes will be restored, but not the positions of the "
"carriages. If positions are being restored and \"MOVE_SPEED\" is specified, "
"then the toolhead moves will be performed with the given speed (in mm/s); "
"otherwise the toolhead move will use the rail homing speed. Note that the "
"carriages restore their positions only over their own axis, which may be "
"necessary to correctly restore COPY and MIRROR mode of the dual carraige."
msgstr ""

#: docs/G-Codes.md:block 298 (paragraph)
msgid ""
"`SHAPER_CALIBRATE [AXIS=<axis>] [NAME=<name>] [FREQ_START=<min_freq>] "
"[FREQ_END=<max_freq>] [HZ_PER_SEC=<hz_per_sec>] [CHIPS=<adxl345_chip_name>] "
"[MAX_SMOOTHING=<max_smoothing>]`: Similarly to `TEST_RESONANCES`, runs the "
"resonance test as configured, and tries to find the optimal parameters for "
"the input shaper for the requested axis (or both X and Y axes if `AXIS` "
"parameter is unset). If `MAX_SMOOTHING` is unset, its value is taken from "
"`[resonance_tester]` section, with the default being unset. See the [Max "
"smoothing](Measuring_Resonances.md#max-smoothing) of the measuring "
"resonances guide for more information on the use of this feature. The "
"results of the tuning are printed to the console, and the frequency "
"responses and the different input shapers values are written to a CSV "
"file(s) `/tmp/calibration_data_<axis>_<name>.csv`. Unless specified, NAME "
"defaults to the current time in \"YYYYMMDD_HHMMSS\" format. Note that the "
"suggested input shaper parameters can be persisted in the config by issuing "
"`SAVE_CONFIG` command, and if `[input_shaper]` was already enabled "
"previously, these parameters take effect immediately."
msgstr ""

#: docs/G-Codes.md:block 376 (header)
msgid "[axis_twist_compensation]"
msgstr ""

#: docs/G-Codes.md:block 377 (paragraph)
msgid ""
"The following commands are available when the [axis_twist_compensation "
"config section](Config_Reference.md#axis_twist_compensation) is enabled."
msgstr ""

#: docs/G-Codes.md:block 378 (header)
msgid "AXIS_TWIST_COMPENSATION_CALIBRATE"
msgstr ""

#: docs/G-Codes.md:block 379 (paragraph)
msgid ""
"`AXIS_TWIST_COMPENSATION_CALIBRATE [SAMPLE_COUNT=<value>]`: Initiates the X "
"twist calibration wizard. `SAMPLE_COUNT` specifies the number of points "
"along the X axis to calibrate at and defaults to 3."
msgstr ""

#~ msgid ""
#~ "`SET_DUAL_CARRIAGE CARRIAGE=[0|1]`: This command will set the active "
#~ "carriage. It is typically invoked from the activate_gcode and "
#~ "deactivate_gcode fields in a multiple extruder configuration."
#~ msgstr ""

#~ msgid ""
#~ "`SHAPER_CALIBRATE [AXIS=<axis>] [NAME=<name>] [FREQ_START=<min_freq>] "
#~ "[FREQ_END=<max_freq>] [HZ_PER_SEC=<hz_per_sec>] "
#~ "[MAX_SMOOTHING=<max_smoothing>]`: Similarly to `TEST_RESONANCES`, runs the "
#~ "resonance test as configured, and tries to find the optimal parameters for "
#~ "the input shaper for the requested axis (or both X and Y axes if `AXIS` "
#~ "parameter is unset). If `MAX_SMOOTHING` is unset, its value is taken from "
#~ "`[resonance_tester]` section, with the default being unset. See the [Max "
#~ "smoothing](Measuring_Resonances.md#max-smoothing) of the measuring "
#~ "resonances guide for more information on the use of this feature. The "
#~ "results of the tuning are printed to the console, and the frequency "
#~ "responses and the different input shapers values are written to a CSV "
#~ "file(s) `/tmp/calibration_data_<axis>_<name>.csv`. Unless specified, NAME "
#~ "defaults to the current time in \"YYYYMMDD_HHMMSS\" format. Note that the "
#~ "suggested input shaper parameters can be persisted in the config by issuing "
#~ "`SAVE_CONFIG` command."
#~ msgstr ""

#~ msgid ""
#~ "`DELTA_CALIBRATE [METHOD=manual] [<probe_parameter>=<value>]`: This command "
#~ "will probe seven points on the bed and recommend updated endstop positions, "
#~ "tower angles, and radius. See the PROBE command for details on the optional "
#~ "probe parameters. If METHOD=manual is specified then the manual probing tool"
#~ " is activated - see the MANUAL_PROBE command above for details on the "
#~ "additional commands available while this tool is active."
#~ msgstr ""

#~ msgid ""
#~ "`BED_TILT_CALIBRATE [METHOD=manual] [<probe_parameter>=<value>]`: This "
#~ "command will probe the points specified in the config and then recommend "
#~ "updated x and y tilt adjustments. See the PROBE command for details on the "
#~ "optional probe parameters. If METHOD=manual is specified then the manual "
#~ "probing tool is activated - see the MANUAL_PROBE command above for details "
#~ "on the additional commands available while this tool is active."
#~ msgstr ""

#~ msgid ""
#~ "`BED_MESH_CALIBRATE [METHOD=manual] [<probe_parameter>=<value>] "
#~ "[<mesh_parameter>=<value>]`: This command probes the bed using generated "
#~ "points specified by the parameters in the config. After probing, a mesh is "
#~ "generated and z-movement is adjusted according to the mesh. See the PROBE "
#~ "command for details on the optional probe parameters. If METHOD=manual is "
#~ "specified then the manual probing tool is activated - see the MANUAL_PROBE "
#~ "command above for details on the additional commands available while this "
#~ "tool is active."
#~ msgstr ""

#~ msgid ""
#~ "`Z_TILT_ADJUST [<probe_parameter>=<value>]`: This command will probe the "
#~ "points specified in the config and then make independent adjustments to each"
#~ " Z stepper to compensate for tilt. See the PROBE command for details on the "
#~ "optional probe parameters."
#~ msgstr ""

#~ msgid ""
#~ "`DUMP_TMC STEPPER=<name>`: This command will read the TMC driver registers "
#~ "and report their values."
#~ msgstr ""

#~ msgid ""
#~ "`SET_TMC_CURRENT STEPPER=<name> CURRENT=<amps> HOLDCURRENT=<amps>`: This "
#~ "will adjust the run and hold currents of the TMC driver. (HOLDCURRENT is not"
#~ " applicable to tmc2660 drivers.)"
#~ msgstr ""

#~ msgid ""
#~ "`SET_TMC_FIELD STEPPER=<name> FIELD=<field> VALUE=<value>`: This will alter "
#~ "the value of the specified register field of the TMC driver. This command is"
#~ " intended for low-level diagnostics and debugging only because changing the "
#~ "fields during run-time can lead to undesired and potentially dangerous "
#~ "behavior of your printer. Permanent changes should be made using the printer"
#~ " configuration file instead. No sanity checks are performed for the given "
#~ "values."
#~ msgstr ""

#~ msgid ""
#~ "`SCREWS_TILT_CALCULATE [DIRECTION=CW|CCW] [MAX_DEVIATION=<value>] "
#~ "[<probe_parameter>=<value>]`: This command will invoke the bed screws "
#~ "adjustment tool. It will command the nozzle to different locations (as "
#~ "defined in the config file) probing the z height and calculate the number of"
#~ " knob turns to adjust the bed level. If DIRECTION is specified, the knob "
#~ "turns will all be in the same direction, clockwise (CW) or counterclockwise "
#~ "(CCW). See the PROBE command for details on the optional probe parameters. "
#~ "IMPORTANT: You MUST always do a G28 before using this command. If "
#~ "MAX_DEVIATION is specified, the command will raise a gcode error if any "
#~ "difference in the screw height relative to the base screw height is greater "
#~ "than the value provided."
#~ msgstr ""

#~ msgid ""
#~ "`SET_PIN PIN=config_name VALUE=<value> CYCLE_TIME=<cycle_time>`: Note - "
#~ "hardware PWM does not currently support the CYCLE_TIME parameter and will "
#~ "use the cycle time defined in the config."
#~ msgstr ""

#~ msgid ""
#~ "Controlled Arc Move (G2 or G3): `G2 [X<pos>] [Y<pos>] [Z<pos>] [E<pos>] "
#~ "[F<speed>] I<value> J<value>`"
#~ msgstr ""

#~ msgid ""
#~ "`SCREWS_TILT_CALCULATE [DIRECTION=CW|CCW] [<probe_parameter>=<value>]`: This"
#~ " command will invoke the bed screws adjustment tool. It will command the "
#~ "nozzle to different locations (as defined in the config file) probing the z "
#~ "height and calculate the number of knob turns to adjust the bed level. If "
#~ "DIRECTION is specified, the knob turns will all be in the same direction, "
#~ "clockwise (CW) or counterclockwise (CCW). See the PROBE command for details "
#~ "on the optional probe parameters. IMPORTANT: You MUST always do a G28 before"
#~ " using this command."
#~ msgstr ""

#~ msgid ""
#~ "`SYNC_EXTRUDER_MOTION EXTRUDER=<name> MOTION_QUEUE=<name>`: This command "
#~ "will cause the stepper specified by EXTRUDER (as defined in an "
#~ "[extruder](Config_Reference#extruder) or "
#~ "[extruder_stepper](Config_Reference#extruder_stepper) config section) to "
#~ "become synchronized to the movement of an extruder specified by MOTION_QUEUE"
#~ " (as defined in an [extruder](Config_Reference#extruder) config section). If"
#~ " MOTION_QUEUE is an empty string then the stepper will be desynchronized "
#~ "from all extruder movement."
#~ msgstr ""

#~ msgid ""
#~ "The force_move module is automatically loaded, however some commands require"
#~ " setting `enable_force_move` in the [printer "
#~ "config](Config_Reference#force_move)."
#~ msgstr ""

#~ msgid ""
#~ "`TEST_RESONANCES AXIS=<axis> OUTPUT=<resonances,raw_data> [NAME=<name>] "
#~ "[FREQ_START=<min_freq>] [FREQ_END=<max_freq>] [HZ_PER_SEC=<hz_per_sec>] "
#~ "[INPUT_SHAPING=[<0:1>]]`: Runs the resonance test in all configured probe "
#~ "points for the requested \"axis\" and measures the acceleration using the "
#~ "accelerometer chips configured for the respective axis. \"axis\" can either "
#~ "be X or Y, or specify an arbitrary direction as `AXIS=dx,dy`, where dx and "
#~ "dy are floating point numbers defining a direction vector (e.g. `AXIS=X`, "
#~ "`AXIS=Y`, or `AXIS=1,-1` to define a diagonal direction). Note that "
#~ "`AXIS=dx,dy` and `AXIS=-dx,-dy` is equivalent. If `INPUT_SHAPING=0` or not "
#~ "set (default), disables input shaping for the resonance testing, because it "
#~ "is not valid to run the resonance testing with the input shaper enabled. "
#~ "`OUTPUT` parameter is a comma-separated list of which outputs will be "
#~ "written. If `raw_data` is requested, then the raw accelerometer data is "
#~ "written into a file or a series of files "
#~ "`/tmp/raw_data_<axis>_[<point>_]<name>.csv` with (`<point>_` part of the "
#~ "name generated only if more than 1 probe point is configured). If "
#~ "`resonances` is specified, the frequency response is calculated (across all "
#~ "probe points) and written into `/tmp/resonances_<axis>_<name>.csv` file. If "
#~ "unset, OUTPUT defaults to `resonances`, and NAME defaults to the current "
#~ "time in \"YYYYMMDD_HHMMSS\" format."
#~ msgstr ""

#~ msgid ""
#~ "`SET_PRESSURE_ADVANCE [EXTRUDER=<config_name>] [ADVANCE=<pressure_advance>] "
#~ "[SMOOTH_TIME=<pressure_advance_smooth_time>]`: Set pressure advance "
#~ "parameters of an extruder stepper (as defined in an "
#~ "[extruder](Config_Reference#extruder) or "
#~ "[extruder_stepper](Config_Reference#extruder_stepper) config section). If "
#~ "EXTRUDER is not specified, it defaults to the stepper defined in the active "
#~ "hotend."
#~ msgstr ""

#~ msgid ""
#~ "`SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=<config_name> "
#~ "[DISTANCE=<distance>]`: Set a new value for the provided extruder stepper's "
#~ "\"rotation distance\" (as defined in an "
#~ "[extruder](Config_Reference#extruder) or "
#~ "[extruder_stepper](Config_Reference#extruder_stepper) config section). If "
#~ "the rotation distance is a negative number then the stepper motion will be "
#~ "inverted (relative to the stepper direction specified in the config file). "
#~ "Changed settings are not retained on Klipper reset. Use with caution as "
#~ "small changes can result in excessive pressure between extruder and hotend. "
#~ "Do proper calibration with filament before use. If 'DISTANCE' value is not "
#~ "provided then this command will return the current rotation distance."
#~ msgstr ""

#~ msgid ""
#~ "This section is organized my Klipper module name, which generally follows "
#~ "the section names specified in the [printer configuration "
#~ "file](Config_Reference.md). Note that some modules are automatically loaded."
#~ msgstr ""

#~ msgid "The query_endstops module is automatically loaded."
#~ msgstr ""

#~ msgid ""
#~ "`SET_LED LED=<config_name> RED=<value> GREEN=<value> BLUE=<value> "
#~ "WHITE=<value> [INDEX=<index>] [TRANSMIT=0] [SYNC=1]`: This sets the LED "
#~ "output. Each color `<value>` must be between 0.0 and 1.0. The WHITE option "
#~ "is only valid on RGBW LEDs. If multiple LED chips are daisy-chained then one"
#~ " may specify INDEX to alter the color of just the given chip (1 for the "
#~ "first chip, 2 for the second, etc.). If INDEX is not provided then all LEDs "
#~ "in the daisy-chain will be set to the provided color. If TRANSMIT=0 is "
#~ "specified then the color change will only be made on the next SET_LED "
#~ "command that does not specify TRANSMIT=0; this may be useful in combination "
#~ "with the INDEX parameter to batch multiple updates in a daisy-chain. By "
#~ "default, the SET_LED command will sync it's changes with other ongoing gcode"
#~ " commands. This can lead to undesirable behavior if LEDs are being set while"
#~ " the printer is not printing as it will reset the idle timeout. If careful "
#~ "timing is not needed, the optional SYNC=0 parameter can be specified to "
#~ "apply the changes instantly and not reset the idle timeout."
#~ msgstr ""

#~ msgid "[neopixel]"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [neopixel config "
#~ "section](Config_Reference.md#neopixel) or [dotstar config "
#~ "section](Config_Reference.md#dotstar) is enabled."
#~ msgstr ""

#~ msgid ""
#~ "`ACTIVATE_EXTRUDER EXTRUDER=<config_name>`: In a printer with multiple "
#~ "extruders this command is used to change the active extruder."
#~ msgstr ""

#~ msgid ""
#~ "`SET_PRESSURE_ADVANCE [EXTRUDER=<config_name>] [ADVANCE=<pressure_advance>] "
#~ "[SMOOTH_TIME=<pressure_advance_smooth_time>]`: Set pressure advance "
#~ "parameters. If EXTRUDER is not specified, it defaults to the active "
#~ "extruder."
#~ msgstr ""

#~ msgid ""
#~ "`SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=<config_name> "
#~ "[DISTANCE=<distance>]`: Set a new value for the provided extruder's "
#~ "\"rotation distance\". If the rotation distance is a negative number then "
#~ "the stepper motion will be inverted (relative to the stepper direction "
#~ "specified in the config file). Changed settings are not retained on Klipper "
#~ "reset. Use with caution as small changes can result in excessive pressure "
#~ "between extruder and hot end. Do proper calibration with filament before "
#~ "use. If 'DISTANCE' value is not included command will return current "
#~ "rotation distance."
#~ msgstr ""

#~ msgid ""
#~ "`GET_POSITION`: Return information on the current location of the toolhead."
#~ msgstr ""

#~ msgid ""
#~ "Klipper's goal is to support the G-Code commands produced by common 3rd "
#~ "party software (eg, OctoPrint, Printrun, Slic3r, Cura, etc.) in their "
#~ "standard configurations. It is not a goal to support every possible G-Code "
#~ "command. Instead, Klipper prefers human readable [\"extended G-Code "
#~ "commands\"](#additional-commands)."
#~ msgstr ""

#~ msgid ""
#~ "The following standard G-Code commands are available if a "
#~ "[firmware_retraction config "
#~ "section](Config_Reference.md#firmware_retraction) is enabled:"
#~ msgstr ""

#~ msgid "Retract: `G10`"
#~ msgstr ""

#~ msgid "Unretract: `G11`"
#~ msgstr ""

#~ msgid ""
#~ "Klipper's goal is to support the G-Code commands produced by common 3rd "
#~ "party software (eg, OctoPrint, Printrun, Slic3r, Cura, etc.) in their "
#~ "standard configurations. It is not a goal to support every possible G-Code "
#~ "command. Instead, Klipper prefers human readable [\"extended G-Code "
#~ "commands\"](#extended-g-code-commands)."
#~ msgstr ""

#~ msgid "G-Code SD card commands"
#~ msgstr ""

#~ msgid ""
#~ "Klipper also supports the following standard G-Code commands if the "
#~ "[virtual_sdcard config section](Config_Reference.md#virtual_sdcard) is "
#~ "enabled:"
#~ msgstr ""

#~ msgid ""
#~ "In addition, the following extended commands are availble when the "
#~ "\"virtual_sdcard\" config section is enabled."
#~ msgstr ""

#~ msgid ""
#~ "Load a file and start SD print: `SDCARD_PRINT_FILE FILENAME=<filename>`"
#~ msgstr ""

#~ msgid "Unload file and clear SD state: `SDCARD_RESET_FILE`"
#~ msgstr ""

#~ msgid "G-Code arcs"
#~ msgstr ""

#~ msgid "G-Code firmware retraction"
#~ msgstr ""

#~ msgid "G-Code display commands"
#~ msgstr ""

#~ msgid ""
#~ "The following standard G-Code commands are available if a [display config "
#~ "section](Config_Reference.md#display) is enabled:"
#~ msgstr ""

#~ msgid "Other available G-Code commands"
#~ msgstr ""

#~ msgid ""
#~ "The following standard G-Code commands are currently available, but using "
#~ "them is not recommended:"
#~ msgstr ""

#~ msgid "Extended G-Code Commands"
#~ msgstr ""

#~ msgid "The following standard commands are supported:"
#~ msgstr ""

#~ msgid ""
#~ "`SET_EXTRUDER_STEP_DISTANCE [EXTRUDER=<config_name>] [DISTANCE=<distance>]`:"
#~ " Set a new value for the provided extruder's \"step distance\". The \"step "
#~ "distance\" is `rotation_distance/(full_steps_per_rotation*microsteps)`. "
#~ "Value is not retained on Klipper reset. Use with caution, small changes can "
#~ "result in excessive pressure between extruder and hot end. Do proper "
#~ "calibration steps with filament before use. If 'DISTANCE' value is not "
#~ "included command will return current step distance."
#~ msgstr ""

#~ msgid "G-Code Macro Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [gcode_macro config "
#~ "section](Config_Reference.md#gcode_macro) is enabled (also see the [command "
#~ "templates guide](Command_Templates.md)):"
#~ msgstr ""

#~ msgid "Custom Pin Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when an [output_pin config "
#~ "section](Config_Reference.md#output_pin) is enabled:"
#~ msgstr ""

#~ msgid "`SET_PIN PIN=config_name VALUE=<value> CYCLE_TIME=<cycle_time>`"
#~ msgstr ""

#~ msgid ""
#~ "Note: Hardware PWM does not currently support the CYCLE_TIME parameter and "
#~ "will use the cycle time defined in the config."
#~ msgstr ""

#~ msgid "Manually Controlled Fans Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [fan_generic config "
#~ "section](Config_Reference.md#fan_generic) is enabled:"
#~ msgstr ""

#~ msgid ""
#~ "`SET_FAN_SPEED FAN=config_name SPEED=<speed>` This command sets the speed of"
#~ " a fan. <speed> must be between 0.0 and 1.0."
#~ msgstr ""

#~ msgid "Neopixel and Dotstar Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [neopixel config "
#~ "section](Config_Reference.md#neopixel) or [dotstar config "
#~ "section](Config_Reference.md#dotstar) is enabled:"
#~ msgstr ""

#~ msgid "Servo Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when a [servo config "
#~ "section](Config_Reference.md#servo) is enabled:"
#~ msgstr ""

#~ msgid "Manual stepper Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [manual_stepper config "
#~ "section](Config_Reference.md#manual_stepper) is enabled:"
#~ msgstr ""

#~ msgid "Probe"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when a [probe config "
#~ "section](Config_Reference.md#probe) is enabled (also see the [probe "
#~ "calibrate guide](Probe_Calibrate.md)):"
#~ msgstr ""

#~ msgid "BLTouch"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [bltouch config "
#~ "section](Config_Reference.md#bltouch) is enabled (also see the [BL-Touch "
#~ "guide](BLTouch.md)):"
#~ msgstr ""

#~ msgid ""
#~ "`BLTOUCH_DEBUG COMMAND=<command>`: This sends a command to the BLTouch. It "
#~ "may be useful for debugging. Available commands are: `pin_down`, "
#~ "`touch_mode`, `pin_up`, `self_test`, `reset`, (*1): `set_5V_output_mode`, "
#~ "`set_OD_output_mode`, `output_mode_store`"
#~ msgstr ""

#~ msgid ""
#~ "*** Note that the commands marked by (*1) are solely supported by a BL-Touch"
#~ " V3.0 or V3.1(+)"
#~ msgstr ""

#~ msgid "Delta Calibration"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [delta_calibrate config "
#~ "section](Config_Reference.md#linear-delta-kinematics) is enabled (also see "
#~ "the [delta calibrate guide](Delta_Calibrate.md)):"
#~ msgstr ""

#~ msgid "Bed Tilt"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [bed_tilt config "
#~ "section](Config_Reference.md#bed_tilt) is enabled:"
#~ msgstr ""

#~ msgid "Mesh Bed Leveling"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [bed_mesh config "
#~ "section](Config_Reference.md#bed_mesh) is enabled (also see the [bed mesh "
#~ "guide](Bed_Mesh.md)):"
#~ msgstr ""

#~ msgid ""
#~ "`BED_MESH_PROFILE LOAD=<name> SAVE=<name> REMOVE=<name>`: This command "
#~ "provides profile management for mesh state. LOAD will restore the mesh state"
#~ " from the profile matching the supplied name. SAVE will save the current "
#~ "mesh state to a profile matching the supplied name. Remove will delete the "
#~ "profile matching the supplied name from persistent memory. Note that after "
#~ "SAVE or REMOVE operations have been run the SAVE_CONFIG gcode must be run to"
#~ " make the changes to peristent memory permanent."
#~ msgstr ""

#~ msgid "Bed Screws Helper"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [bed_screws config "
#~ "section](Config_Reference.md#bed_screws) is enabled (also see the [manual "
#~ "level guide](Manual_Level.md#adjusting-bed-leveling-screws)):"
#~ msgstr ""

#~ msgid "Bed Screws Tilt Adjust Helper"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [screws_tilt_adjust config "
#~ "section](Config_Reference.md#screws_tilt_adjust) is enabled (also see the "
#~ "[manual level guide](Manual_Level.md#adjusting-bed-leveling-screws-using-"
#~ "the-bed-probe)):"
#~ msgstr ""

#~ msgid "Z Tilt"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [z_tilt config "
#~ "section](Config_Reference.md#z_tilt) is enabled:"
#~ msgstr ""

#~ msgid "Dual Carriages"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when the [dual_carriage config "
#~ "section](Config_Reference.md#dual_carriage) is enabled:"
#~ msgstr ""

#~ msgid "TMC stepper drivers"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when any of the [tmcXXXX config "
#~ "sections](Config_Reference.md#tmc-stepper-driver-configuration) are enabled:"
#~ msgstr ""

#~ msgid ""
#~ "`INIT_TMC STEPPER=<name>`: This command will intitialize the TMC registers. "
#~ "Needed to re-enable the driver if power to the chip is turned off then back "
#~ "on."
#~ msgstr ""

#~ msgid "Endstop adjustments by stepper phase"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when an [endstop_phase config "
#~ "section](Config_Reference.md#endstop_phase) is enabled (also see the "
#~ "[endstop phase guide](Endstop_Phase.md)):"
#~ msgstr ""

#~ msgid "Force movement"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [force_move config "
#~ "section](Config_Reference.md#force_move) is enabled:"
#~ msgstr ""

#~ msgid "SDcard loop"
#~ msgstr ""

#~ msgid ""
#~ "When the [sdcard_loop config section](Config_Reference.md#sdcard_loop) is "
#~ "enabled, the following extended commands are available:"
#~ msgstr ""

#~ msgid ""
#~ "`SDCARD_LOOP_BEGIN COUNT=<count>`: Begin a looped section in the SD print. A"
#~ " count of 0 indicates that the section should be looped indefinately."
#~ msgstr ""

#~ msgid "Send message (respond) to host"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are availabe when the [respond config "
#~ "section](Config_Reference.md#respond) is enabled."
#~ msgstr ""

#~ msgid ""
#~ "`RESPOND TYPE=command MSG=\"<message>\"`: echo the message prepended with "
#~ "`// `. Octopint can be configured to respond to these messages (e.g. "
#~ "`RESPOND TYPE=command MSG=action:pause`)."
#~ msgstr ""

#~ msgid "Pause Resume"
#~ msgstr ""

#~ msgid "Filament Sensor"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when the [filament_switch_sensor or "
#~ "filament_motion_sensor config "
#~ "section](Config_Reference.md#filament_switch_sensor) is enabled."
#~ msgstr ""

#~ msgid ""
#~ "`QUERY_FILAMENT_SENSOR SENSOR=<sensor_name>`: Queries the current status of "
#~ "the filament sensor. The data displayed on the terminal will depend on the "
#~ "sensor type defined in the confguration."
#~ msgstr ""

#~ msgid "Firmware Retraction"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [firmware_retraction config "
#~ "section](Config_Reference.md#firmware_retraction) is enabled. These commands"
#~ " allow you to utilise the firmware retraction feature available in many "
#~ "slicers, to reduce stringing during non-extrusion moves from one part of the"
#~ " print to another. Appropriately configuring pressure advance reduces the "
#~ "length of retraction required."
#~ msgstr ""

#~ msgid "Skew Correction"
#~ msgstr ""

#~ msgid ""
#~ "`SKEW_PROFILE [LOAD=<name>] [SAVE=<name>] [REMOVE=<name>]`: Profile "
#~ "management for skew_correction. LOAD will restore skew state from the "
#~ "profile matching the supplied name. SAVE will save the current skew state to"
#~ " a profile matching the supplied name. Remove will delete the profile "
#~ "matching the supplied name from persistent memory. Note that after SAVE or "
#~ "REMOVE operations have been run the SAVE_CONFIG gcode must be run to make "
#~ "the changes to peristent memory permanent."
#~ msgstr ""

#~ msgid "Delayed GCode"
#~ msgstr ""

#~ msgid ""
#~ "The following command is enabled if a [delayed_gcode config "
#~ "section](Config_Reference.md#delayed_gcode) has been enabled (also see the "
#~ "[template guide](Command_Templates.md#delayed-gcodes)):"
#~ msgstr ""

#~ msgid "Save Variables"
#~ msgstr ""

#~ msgid ""
#~ "The following command is enabled if a [save_variables config "
#~ "section](Config_Reference.md#save_variables) has been enabled:"
#~ msgstr ""

#~ msgid "Resonance compensation"
#~ msgstr ""

#~ msgid ""
#~ "The following command is enabled if an [input_shaper config "
#~ "section](Config_Reference.md#input_shaper) has been enabled (also see the "
#~ "[resonance compensation guide](Resonance_Compensation.md)):"
#~ msgstr ""

#~ msgid "Temperature Fan Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when a [temperature_fan config "
#~ "section](Config_Reference.md#temperature_fan) is enabled:"
#~ msgstr ""

#~ msgid ""
#~ "`SET_TEMPERATURE_FAN_TARGET temperature_fan=<temperature_fan_name> "
#~ "[target=<target_temperature>] [min_speed=<min_speed>]  "
#~ "[max_speed=<max_speed>]`: Sets the target temperature for a temperature_fan."
#~ " If a target is not supplied, it is set to the specified temperature in the "
#~ "config file. If speeds are not supplied, no change is applied."
#~ msgstr ""

#~ msgid "Adxl345 Accelerometer Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when an [adxl345 config "
#~ "section](Config_Reference.md#adxl345) is enabled:"
#~ msgstr ""

#~ msgid "Resonance Testing Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when a [resonance_tester config "
#~ "section](Config_Reference.md#resonance_tester) is enabled (also see the "
#~ "[measuring resonances guide](Measuring_Resonances.md)):"
#~ msgstr ""

#~ msgid "Palette 2 Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when the [palette2 config "
#~ "section](Config_Reference.md#palette2) is enabled:"
#~ msgstr ""

#~ msgid ""
#~ "`TEST_RESONANCES AXIS=<axis> OUTPUT=<resonances,raw_data> [NAME=<name>] "
#~ "[FREQ_START=<min_freq>] [FREQ_END=<max_freq>] [HZ_PER_SEC=<hz_per_sec>] "
#~ "[INPUT_SHAPING=[<0:1>]]`: Runs the resonance test in all configured probe "
#~ "points for the requested <axis> and measures the acceleration using the "
#~ "accelerometer chips configured for the respective axis. <axis> can either be"
#~ " X or Y, or specify an arbitrary direction as `AXIS=dx,dy`, where dx and dy "
#~ "are floating point numbers defining a direction vector (e.g. `AXIS=X`, "
#~ "`AXIS=Y`, or `AXIS=1,-1` to define a diagonal direction). Note that "
#~ "`AXIS=dx,dy` and `AXIS=-dx,-dy` is equivalent. If `INPUT_SHAPING=0` or not "
#~ "set (default), disables input shaping for the resonance testing, because it "
#~ "is not valid to run the resonance testing with the input shaper enabled. "
#~ "`OUTPUT` parameter is a comma-separated list of which outputs will be "
#~ "written. If `raw_data` is requested, then the raw accelerometer data is "
#~ "written into a file or a series of files "
#~ "`/tmp/raw_data_<axis>_[<point>_]<name>.csv` with (`<point>_` part of the "
#~ "name generated only if more than 1 probe point is configured). If "
#~ "`resonances` is specified, the frequency response is calculated (across all "
#~ "probe points) and written into `/tmp/resonances_<axis>_<name>.csv` file. If "
#~ "unset, OUTPUT defaults to `resonances`, and NAME defaults to the current "
#~ "time in \"YYYYMMDD_HHMMSS\" format."
#~ msgstr ""

#~ msgid ""
#~ "`FACTOR`: The value changes at a rate of `factor` per millimeter. The "
#~ "formula used is `value = start + factor * z_height`. You can plug the "
#~ "optimum Z height directly into the formula to determine the optimum "
#~ "parameter value."
#~ msgstr ""

#~ msgid ""
#~ "`FACTOR` and `BAND`: The value changes at an average rate of `factor` per "
#~ "millimeter, but in discrete bands where the adjustment will only be made "
#~ "every `BAND` millimeters of Z height. The formula used is `value = start + "
#~ "factor * ((floor(z_height / band) + .5) * band)`."
#~ msgstr ""

#~ msgid ""
#~ "`STEP_DELTA` and `STEP_HEIGHT`: The value changes by `STEP_DELTA` every "
#~ "`STEP_HEIGHT` millimeters. The formula used is `value = start + step_delta *"
#~ " floor(z_height / step_height)`. You can simply count bands or read tuning "
#~ "tower labels to determine the optimum value."
#~ msgstr ""

#~ msgid ""
#~ "`ACCELEROMETER_DEBUG_READ [CHIP=<config_name>] REG=<register>`: queries "
#~ "ADXL345 register <register> (e.g. 44 or 0x2C). Can be useful for debugging "
#~ "purposes."
#~ msgstr ""

#~ msgid ""
#~ "`ACCELEROMETER_DEBUG_WRITE [CHIP=<config_name>] REG=<reg> VAL=<value>`: "
#~ "writes raw <value> into a register <register>. Both <value> and <register> "
#~ "can be a decimal or a hexadecimal integer. Use with care, and refer to "
#~ "ADXL345 data sheet for the reference."
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [skew_correction config "
#~ "section](Config_Reference.md#skew_correction) is enabled (also see the [Skew"
#~ " Correction](Skew_Correction.md) guide):"
#~ msgstr ""

#~ msgid ""
#~ "`SYNC_STEPPER_TO_EXTRUDER STEPPER=<name> [EXTRUDER=<name>]`: This command "
#~ "will cause the given extruder STEPPER (as specified in an "
#~ "[extruder](Config_Reference#extruder) or [extruder "
#~ "stepper](Config_Reference#extruder_stepper) config section) to become "
#~ "synchronized to the given EXTRUDER. If EXTRUDER is an empty string then the "
#~ "stepper will not be synchronized to an extruder."
#~ msgstr ""

#~ msgid "Filament Width Sensor Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when the [tsl1401cl filament width sensor"
#~ " config section](Config_Reference.md#tsl1401cl_filament_width_sensor) or "
#~ "[hall filament width sensor config "
#~ "section](Config_Reference.md#hall_filament_width_sensor) is enabled (also "
#~ "see [TSLl401CL Filament Width Sensor](TSL1401CL_Filament_Width_Sensor.md) "
#~ "and [Hall Filament Width Sensor](Hall_Filament_Width_Sensor.md)):"
#~ msgstr ""

#~ msgid "`QUERY_FILAMENT_WIDTH` - Return the current measured filament width"
#~ msgstr ""

#~ msgid ""
#~ "`RESET_FILAMENT_WIDTH_SENSOR` - Clear all sensor readings. Helpful after "
#~ "filament change"
#~ msgstr ""

#~ msgid ""
#~ "`DISABLE_FILAMENT_WIDTH_SENSOR` - Turn off the filament width sensor and "
#~ "stop using it for flow control"
#~ msgstr ""

#~ msgid ""
#~ "`ENABLE_FILAMENT_WIDTH_SENSOR` - Turn on the filament width sensor and start"
#~ " using it for flow control"
#~ msgstr ""

#~ msgid "Hall Filament Width Sensor Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when the [hall filament width sensor "
#~ "config section](Config_Reference.md#hall_filament_width_sensor) is enabled:"
#~ msgstr ""

#~ msgid ""
#~ "`QUERY_RAW_FILAMENT_WIDTH` - Return the current ADC channel readings and RAW"
#~ " sensor value for calibration points"
#~ msgstr ""

#~ msgid "`ENABLE_FILAMENT_WIDTH_LOG` - Turn on diameter logging"
#~ msgstr ""

#~ msgid "`DISABLE_FILAMENT_WIDTH_LOG` - Turn off diameter logging"
#~ msgstr ""

#~ msgid "Extruder stepper Commands"
#~ msgstr ""

#~ msgid ""
#~ "The following command is available when an [extruder_stepper config "
#~ "section](Config_Reference.md#extruder_stepper) is enabled:"
#~ msgstr ""

#~ msgid ""
#~ "`SYNC_STEPPER_TO_EXTRUDER STEPPER=<extruder_stepper config_name> "
#~ "[EXTRUDER=<extruder config_name>]`: This command will cause the given "
#~ "STEPPER to become synchronized to the given EXTRUDER, overriding the "
#~ "extruder defined in the \"extruder_stepper\" config section."
#~ msgstr ""

#~ msgid ""
#~ "`BED_MESH_OUTPUT PGP=[<0:1>]`: This command outputs the current probed z "
#~ "values and current mesh values to the terminal. If PGP=1 is specified the "
#~ "x,y coordinates generated by bed_mesh, along with their associated indices, "
#~ "will be output to the terminal."
#~ msgstr ""

#~ msgid ""
#~ "The following commands are available when the [skew_correction config "
#~ "section](Config_Reference.md#skew_correction) is enabled (also see the [skew"
#~ " correction guide](skew_correction.md)):"
#~ msgstr ""

#~ msgid ""
#~ "`CALC_MEASURED_SKEW [AC=<ac_length>] [BD=<bd_length>] [AD=<ad_length>]`: "
#~ "Calculates and reports the skew (in radians and degrees) based on a measured"
#~ " print. This can be useful for determining the printer's current skew after "
#~ "correction has been applied. It may also be useful before correction is "
#~ "applied to determine if skew correction is necessary. See skew_correction.md"
#~ " for details on skew calibration objects and measurements."
#~ msgstr ""

#~ msgid ""
#~ "`ADXL345_DEBUG_READ [CHIP=<config_name>] REG=<register>`: queries ADXL345 "
#~ "register <register> (e.g. 44 or 0x2C). Can be useful for debugging purposes."
#~ msgstr ""

#~ msgid ""
#~ "`ADXL345_DEBUG_WRITE [CHIP=<config_name>] REG=<reg> VAL=<value>`: writes raw"
#~ " <value> into a register <register>. Both <value> and <register> can be a "
#~ "decimal or a hexadecimal integer. Use with care, and refer to ADXL345 data "
#~ "sheet for the reference."
#~ msgstr ""

#~ msgid ""
#~ "`TUNING_TOWER COMMAND=<command> PARAMETER=<name> START=<value> "
#~ "FACTOR=<value> [BAND=<value>]`: A tool for tuning a parameter on each Z "
#~ "height during a print. The tool will run the given COMMAND with the given "
#~ "PARAMETER assigned to the value using the formula `value = start + factor * "
#~ "z_height`. If BAND is provided then the adjustment will only be made every "
#~ "BAND millimeters of z height - in that case the formula used is `value = "
#~ "start + factor * ((floor(z_height / band) + .5) * band)`."
#~ msgstr ""

#~ msgid ""
#~ "`ACCELEROMETER_MEASURE [CHIP=<config_name>] [RATE=<value>] [NAME=<value>]`: "
#~ "Starts accelerometer measurements at the requested number of samples per "
#~ "second. If CHIP is not specified it defaults to \"default\". Valid rates are"
#~ " 25, 50, 100, 200, 400, 800, 1600, and 3200. The command works in a start-"
#~ "stop mode: when executed for the first time, it starts the measurements, "
#~ "next execution stops them. If RATE is not specified, then the default value "
#~ "is used (either from `printer.cfg` or `3200` default value). The results of "
#~ "measurements are written to a file named `/tmp/adxl345-<chip>-<name>.csv` "
#~ "where `<chip>` is the name of the accelerometer chip (`my_chip_name` from "
#~ "`[adxl345 my_chip_name]`) and `<name>` is the optional NAME parameter. If "
#~ "NAME is not specified it defaults to the current time in \"YYYYMMDD_HHMMSS\""
#~ " format. If the accelerometer does not have a name in its config section "
#~ "(simply `[adxl345]`) <chip> part of the name is not generated."
#~ msgstr ""

#~ msgid ""
#~ "`ACCELEROMETER_QUERY [CHIP=<config_name>] [RATE=<value>]`: queries "
#~ "accelerometer for the current value. If CHIP is not specified it defaults to"
#~ " \"default\". If RATE is not specified, the default value is used. This "
#~ "command is useful to test the connection to the ADXL345 accelerometer: one "
#~ "of the returned values should be a free-fall acceleration (+/- some noise of"
#~ " the chip)."
#~ msgstr ""

#~ msgid ""
#~ "`TEST_RESONANCES AXIS=<axis> OUTPUT=<resonances,raw_data> [NAME=<name>] "
#~ "[FREQ_START=<min_freq>] [FREQ_END=<max_freq>] [HZ_PER_SEC=<hz_per_sec>] "
#~ "[INPUT_SHAPING=[<0:1>]]`: Runs the resonance test in all configured probe "
#~ "points for the requested axis (X or Y) and measures the acceleration using "
#~ "the accelerometer chips configured for the respective axis. If "
#~ "`INPUT_SHAPING=0` or not set (default), disables input shaping for the "
#~ "resonance testing, because it is not valid to run the resonance testing with"
#~ " the input shaper enabled. `OUTPUT` parameter is a comma-separated list of "
#~ "which outputs will be written. If `raw_data` is requested, then the raw "
#~ "accelerometer data is written into a file or a series of files "
#~ "`/tmp/raw_data_<axis>_[<point>_]<name>.csv` with (`<point>_` part of the "
#~ "name generated only if more than 1 probe point is configured). If "
#~ "`resonances` is specified, the frequency response is calculated (across all "
#~ "probe points) and written into `/tmp/resonances_<axis>_<name>.csv` file. If "
#~ "unset, OUTPUT defaults to `resonances`, and NAME defaults to the current "
#~ "time in \"YYYYMMDD_HHMMSS\" format."
#~ msgstr ""

#~ msgid ""
#~ "`SCREWS_TILT_CALCULATE [<probe_parameter>=<value>]`: This command will "
#~ "invoke the bed screws adjustment tool. It will command the nozzle to "
#~ "different locations (as defined in the config file) probing the z height and"
#~ " calculate the number of knob turns to adjust the bed level. See the PROBE "
#~ "command for details on the optional probe parameters. IMPORTANT: You MUST "
#~ "always do a G28 before using this command."
#~ msgstr ""
